{"version":3,"sources":["screens/ChatGroup.js","firebase.js","screens/ChatPage.js","screens/MenuScreen.js","screens/ExportToExcel.js","screens/HistoryScreen.js","App.js","assets/Pepsi-Logo.png"],"names":["ChatGroup","navigation","useState","count","setCount","search","setSearch","filteredDataSource","setFilteredDataSource","masterDataSource","setMasterDataSource","searchFilterFunction","text","newData","filter","item","itemData","shopcode","toUpperCase","textData","indexOf","useEffect","countTimer","setInterval","manageTimer","clearInterval","a","async","selectChatLog","fetch","response","json","console","error","View","style","styles","container","lightTheme","round","searchIcon","size","onChangeText","onClear","placeholder","value","SectionList","ItemSeparatorComponent","listItemSeparatorStyle","sections","data","renderItem","flex","flexDirection","marginLeft","Image","source","uri","displayimage","Img","Text","sectionListItemStyle","onPress","shopname","chatname","menu","Data","status","method","body","JSON","stringify","navigate","updateChatLog","textAlign","backgroundColor","chatcolor","fontSize","padding","marginTop","color","height","width","borderRadius","chatcount","keyExtractor","index","StyleSheet","create","namechats","alignItems","justifyContent","titleText","notiText","marginRight","button","db","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","firestore","storage","auth","ChatPage","route","messages","setMessages","params","unsubscribe","collection","orderBy","onSnapshot","snapshot","docs","map","doc","_id","createdAt","toDate","user","image","video","received","where","get","then","querySnapshot","forEach","ref","update","onSend","useCallback","insertChatLog","add","images","setImages","videos","setVideos","setUrls","setProgress","handleUpload","date","Date","getDate","month","getMonth","year","getFullYear","hours","getHours","min","getMinutes","sec","getSeconds","filename","promises","uploadTask","put","push","on","progress","Math","bytesTransferred","totalBytes","log","child","getDownloadURL","urls","uploadImagePicked","prevState","geturls","msg","random","toString","substring","name","avatar","uploadVideosPicked","getchatText","getmenuChat","Message","updateChat","dispatch","CommonActions","goBack","alert","Button","title","window","confirm","showAvatarForEveryMessage","renderBubble","props","tickStyle","currentMessage","timeTextStyle","right","left","textStyle","wrapperStyle","quickReplyStyle","borderWidth","renderMessageVideo","position","Video","resizeMode","useNativeControls","shouldPlay","type","id","hidden","onChange","e","i","newImage","target","files","onDrop","accept","for","onClick","MenuScreen","require","logo1","containerrow","ExportToExcel","apiData","fileName","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","HistoryScreen","modalVisible","setModalVisible","setTitleText","shopDisplayImage","setShopDisplayImage","shopCodeText","setShopCodeText","setShopNameText","shopTellText","setShopTellText","shopAddressText","setShopAddressText","setShopChatNameText","setShopMenu","chatName","filteredDataSource1","setFilteredDataSource1","masterDataSource1","setMasterDataSource1","filteredDataSource2","setFilteredDataSource2","masterDataSource2","setMasterDataSource2","filteredDataSource3","setFilteredDataSource3","masterDataSource3","setMasterDataSource3","filteredDataSource4","setFilteredDataSource4","masterDataSource4","setMasterDataSource4","filteredDataSource5","setFilteredDataSource5","masterDataSource5","setMasterDataSource5","filteredDataSource6","setFilteredDataSource6","masterDataSource6","setMasterDataSource6","React","setData","axios","r","getUser","onPressTitle","tell","address","getTable","newData1","newData2","newData3","newData4","newData5","newData6","onPressChat","readUser","username","dataTable","setDataTable","test2","groupname","renderSectionHeader","section","groupText","Modal","animationType","transparent","visible","onRequestClose","Alert","centeredView","modalView","renderInputToolbar","Pressable","buttonClose","Img2","marginBottom","DataTable","Header","Title","FlatList","Row","Cell","num","dateinsert","IconButton","icon","container2","margin","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","buttonOpen","fontWeight","modalText","Stack","createStackNavigator","App","NavigationContainer","Navigator","screenOptions","headerTitleAlign","Screen","component","module","exports"],"mappings":"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","file":"static/js/app.3c124913.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { SectionList, StyleSheet, Text, View, Image } from 'react-native';\nimport { SearchBar } from 'react-native-elements';\n\nconst ChatGroup = ({ navigation }) => {\n    const [count, setCount] = useState(3);\n\n    const [search, setSearch] = useState('');\n    const [filteredDataSource, setFilteredDataSource] = useState([]);\n    const [masterDataSource, setMasterDataSource] = useState([]);\n\n\n    const searchFilterFunction = (text) => {\n        // Check if searched text is not blank\n        if (text) {\n            setCount(0)\n            // Inserted text is not blank\n            // Filter the masterDataSource\n            // Update FilteredDataSource\n            const newData = masterDataSource.filter(function (item) {\n                const itemData = item.shopcode\n                    ? item.shopcode.toUpperCase()\n                    : ''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData) > -1;\n            });\n            setFilteredDataSource(newData);\n            setSearch(text);\n        } else {\n            setCount(3)\n            // Inserted text is blank\n            // Update FilteredDataSource with masterDataSource\n            setFilteredDataSource(masterDataSource);\n            setSearch(text);\n        }\n    };\n\n    useEffect(() => {\n        // selectChatLog()\n        const countTimer = setInterval(() => {\n            manageTimer();\n        }, 1000);\n        // and clear this timer when the component is unmounted\n        return function cleanup() {\n            clearInterval(countTimer);\n        };\n    });\n\n    const manageTimer = async () => {\n\n        if (count == 0) {\n\n        } else if (count == 1) {\n            selectChatLog()\n        } else {\n            setCount(count - 1)\n        }\n    }\n\n    const selectChatLog = async () => {\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat/select_user_and_log.php')\n            const json = await response.json()\n            setFilteredDataSource(json);\n            setMasterDataSource(json);\n            setCount(3)\n        } catch (error) {\n            console.error(error)\n            setCount(3)\n        }\n    }\n\n    const updateChatLog = async (shopname, shopcode, chatname, menu) => {\n        //  alert(shopcode + \" \" + chatname)\n        var Data = {\n            shopcode: shopcode,\n            chatname: chatname,\n            status: 'read'\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat/update_chat_log_web.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n            const json = await response.json()\n        } catch (error) {\n            //   alert(error)\n            console.error(error)\n        }\n        navigation.navigate('Chat', {\n            shopname: shopname,\n            shopcode: shopcode,\n            chatname: chatname,\n            menu: menu,\n        })\n    }\n\n    const FlatListItemSeparator = () => {\n        return (\n            //Item Separator\n            <View style={styles.listItemSeparatorStyle} />\n        );\n    };\n\n    return (\n\n\n        <View style={{ backgroundColor: \"write\" }, styles.container}>\n            <SearchBar\n                lightTheme\n                round\n                searchIcon={{ size: 24 }}\n                onChangeText={(text) => searchFilterFunction(text)}\n                onClear={(text) => searchFilterFunction('')}\n                placeholder=\"ค้นหาจากรหัสร้านค้า...\"\n                value={search}\n            />\n\n            <SectionList\n                ItemSeparatorComponent={FlatListItemSeparator}\n                sections={[\n                    { data: filteredDataSource },\n                ]}\n                renderItem={({ item }) => (\n                    // Single Comes here which will be repeatative for the FlatListItems\n                    <View style={{ flex: 1, flexDirection: 'row', marginLeft: 20 }}>\n                        <Image\n                            source={{ uri: item.displayimage }}\n                            style={styles.Img}\n                        />\n                        <Text\n                            style={styles.sectionListItemStyle}\n                            //Item Separator View\n                            onPress={() => updateChatLog(item.shopname, item.shopcode, item.chatname, item.menu)}>\n                            {item.shopcode} ({item.shopname})\n                        </Text>\n                        <Text\n                            style={{\n                                textAlign: 'center',\n                                backgroundColor: item.chatcolor,\n                                fontSize: 10,\n                                padding: 5,\n                                marginTop: 5,\n                                color: '#fff',\n                                height: 20,\n                                width: 20,\n                                borderRadius: 10\n                            }}>\n                            {item.chatcount}\n                        </Text>\n                    </View>\n                )}\n                keyExtractor={(item, index) => index}\n            />\n        </View>\n\n\n    )\n}\nexport default ChatGroup\n\nconst styles = StyleSheet.create({\n    Img: {\n        height: 50,\n        width: 50,\n        borderRadius: 25\n    },\n    namechats: {\n        /// flex: 1,\n        // justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#0089FC',\n        height: 40\n    },\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        backgroundColor: 'white',\n    },\n    titleText: {\n        textAlign: 'center',\n        backgroundColor: '#0089FC',\n        fontSize: 20,\n        padding: 5,\n        color: '#fff',\n        height: 40\n\n    },\n    notiText: {\n        textAlign: 'center',\n        backgroundColor: 'red',\n        fontSize: 10,\n        padding: 5,\n        marginTop: 5,\n        marginRight: 5,\n        color: '#fff',\n        height: 20,\n        width: 20,\n        borderRadius: 10\n    },\n    sectionListItemStyle: {\n        fontSize: 15,\n        padding: 15,\n        color: '#000',\n        backgroundColor: 'white',\n    },\n    listItemSeparatorStyle: {\n        height: 0.5,\n        width: '100%',\n        backgroundColor: '#C8C8C8',\n    },\n    button: {\n        justifyContent: 'center',\n        width: 250,\n        height: 40,\n        borderRadius: 10\n    },\n\n});","import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/storage';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDBCB00CkxHXwiAxqtj369EKv5M5OCgslc\",\n    authDomain: \"pepsi-coolerfan-chat-2d9ab.firebaseapp.com\",\n    databaseURL: \"gs://pepsi-coolerfan-chat-2d9ab.appspot.com\",\n    projectId: \"pepsi-coolerfan-chat-2d9ab\",\n    storageBucket: \"pepsi-coolerfan-chat-2d9ab.appspot.com\",\n    messagingSenderId: \"967346529141\",\n    appId: \"1:967346529141:web:87311021ef0ced75a9e93c\"\n};\nlet app;\n\nif (firebase.apps.length === 0) {\n    app = firebase.initializeApp(firebaseConfig)\n} else {\n    app = firebase.app();\n}\n\nconst db = app.firestore();\nconst auth = firebase.auth();\nconst storage = firebase.storage();\n\nexport { db, auth, storage};\n","import React, { useEffect, useState, useCallback } from 'react'\nimport { StyleSheet, Text, View, Button } from 'react-native';\nimport { db, storage } from '../firebase';\nimport { GiftedChat, Bubble } from 'react-native-gifted-chat';\nimport { Video, Audio } from 'expo-av';\nimport { CommonActions } from '@react-navigation/native';\n\nconst ChatPage = ({ route, navigation }) => {\n    const [messages, setMessages] = useState([]);\n    const { shopname, shopcode, chatname, menu } = route.params;\n    const [count, setCount] = useState(3);\n\n    useEffect(() => {\n        const unsubscribe = db.collection(chatname).orderBy('createdAt', 'desc').onSnapshot(snapshot => {\n            setMessages(\n                snapshot.docs.map(doc => ({\n                    _id: doc.data()._id,\n                    createdAt: doc.data().createdAt.toDate(),\n                    text: doc.data().text,\n                    user: doc.data().user,\n                    image: doc.data().image,\n                    video: doc.data().video,\n                    received: doc.data().received\n                }))\n            )\n        })\n        return () => unsubscribe;\n    }, [])\n\n    useEffect(() => {\n        // selectChatLog()\n        const countTimer = setInterval(() => {\n            manageTimer();\n        }, 1000);\n        // and clear this timer when the component is unmounted\n        return function cleanup() {\n            clearInterval(countTimer);\n        };\n    });\n\n    const manageTimer = async () => {\n\n        if (count == 0) {\n\n        } else if (count == 1) {\n            selectChatLog()\n        } else {\n            setCount(count - 1)\n        }\n    }\n\n    const selectChatLog = async () => {\n        var Data = {\n            shopcode: shopcode,\n            chatname: chatname,\n            status: 'read'\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat/update_chat_log_web.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n            const json = await response.json()\n\n            const cityRef = db.collection(chatname).where(\"user._id\", \"==\", shopcode)\n                .get()\n                .then(function (querySnapshot) {\n                    querySnapshot.forEach(function (doc) {\n                        doc.ref.update({ received: true })\n                    });\n                })\n\n            setCount(3)\n        } catch (error) {\n            setCount(3)\n            console.error(error)\n        }\n    }\n\n    const onSend = useCallback((messages = []) => {\n        //alert(\"chatName\" + chatName + '  shopCode ' + shopCode + ' menu ' + menuChat)\n        //  alert(\"chatText \" + chatText)\n        insertChatLog(chatname, menu)\n        //   setMessages(previousMessages => GiftedChat.append(previousMessages, messages))\n        const {\n            _id,\n            createdAt,\n            text,\n            user,\n            received\n        } = messages[0]\n        db.collection(chatname).add({\n            _id,\n            createdAt,\n            text,\n            user,\n            received: false\n        })\n\n    }, [])\n\n    const [images, setImages] = useState([]);\n    const [videos, setVideos] = useState([]);\n\n    const [urls, setUrls] = useState([]);\n    const [progress, setProgress] = useState(0);\n\n    const handleChange = (e) => {\n        setImages([]);\n        setUrls([]);\n        for (let i = 0; i < e.target.files.length; i++) {\n            const newImage = e.target.files[i];\n            newImage[\"id\"] = Math.random();\n            setImages((prevState) => [...prevState, newImage]);\n        }\n    };\n\n    const handleUpload = async () => {\n        var date = new Date().getDate(); //Current Date\n        var month = new Date().getMonth() + 1; //Current Month\n        var year = new Date().getFullYear(); //Current Year\n        var hours = new Date().getHours(); //Current Hours\n        var min = new Date().getMinutes(); //Current Minutes\n        var sec = new Date().getSeconds(); //Current Seconds\n\n        const filename = 'admin_' + year + month + date + hours + min + sec\n\n        const promises = [];\n        images.map((image) => {\n            const uploadTask = storage.ref(`images/${filename}`).put(image);\n\n            promises.push(uploadTask);\n            uploadTask.on(\n                \"state_changed\",\n                (snapshot) => {\n                    const progress = Math.round(\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                    );\n                    setProgress(progress);\n                },\n                (error) => {\n                    console.log(error);\n                },\n                async () => {\n                    await storage\n                        .ref(\"images\")\n                        .child(filename)\n                        .getDownloadURL()\n                        .then((urls) => {\n                            uploadImagePicked(urls)\n                            setUrls((prevState) => [...prevState, urls]);\n                        });\n                }\n            );\n            //  uploadImagePicked()\n        });\n\n        /*\n                Promise.all(promises)\n                    .then(() => )\n                    .catch((err) => console.log(err));\n                  */\n    };\n\n    const uploadImagePicked = (geturls) => {\n        const randomid = Math.random().toString(36).substring(7)\n        let msg = {\n            _id: randomid,\n            text: '',\n            createdAt: new Date(),\n            user: {\n                _id: 'Admin',\n                name: 'Admin',\n                avatar: 'https://static-s.aa-cdn.net/img/gp/20600014266053/JVWGO91AFGOSfDoqO3V_YlUiWnCoiyob0aPkVOss0qASb26aRbXvWiiNK12ZFLxfsSw=s300?v=1'\n            },\n            image: geturls\n        }\n\n        const {\n            _id,\n            createdAt,\n            text,\n            user,\n            image,\n            received\n        } = [msg][0]\n        db.collection(chatname).add({\n            _id,\n            createdAt,\n            text,\n            user,\n            image,\n            received: false\n        })\n        insertChatLog(chatname, menu)\n\n    }\n\n\n    const handleChangevdo = (e) => {\n        setVideos([]);\n        setUrls([]);\n        for (let i = 0; i < e.target.files.length; i++) {\n            const newImage = e.target.files[i];\n            newImage[\"id\"] = Math.random();\n\n            setVideos((prevState) => [...prevState, newImage]);\n        }\n    };\n\n    const handleUploadvdo = async () => {\n        const promises = [];\n        var date = new Date().getDate(); //Current Date\n        var month = new Date().getMonth() + 1; //Current Month\n        var year = new Date().getFullYear(); //Current Year\n        var hours = new Date().getHours(); //Current Hours\n        var min = new Date().getMinutes(); //Current Minutes\n        var sec = new Date().getSeconds(); //Current Seconds\n\n        const filename = 'admin_' + year + month + date + hours + min + sec\n\n        videos.map((image) => {\n            const uploadTask = storage.ref(`videos/${filename}`).put(image);\n\n            promises.push(uploadTask);\n            uploadTask.on(\n                \"state_changed\",\n                (snapshot) => {\n                    const progress = Math.round(\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                    );\n                    setProgress(progress);\n                },\n                (error) => {\n                    console.log(error);\n                },\n                async () => {\n                    await storage\n                        .ref(\"videos\")\n                        .child(filename)\n                        .getDownloadURL()\n                        .then((urls) => {\n                            uploadVideosPicked(urls)\n                            setUrls((prevState) => [...prevState, urls]);\n                        });\n                }\n            );\n            //  uploadImagePicked()\n        });\n\n        /*\n                Promise.all(promises)\n                    .then(() => )\n                    .catch((err) => console.log(err));\n                  */\n    };\n    const uploadVideosPicked = (geturls) => {\n        const randomid = Math.random().toString(36).substring(7)\n        let msg = {\n            _id: randomid,\n            text: '',\n            createdAt: new Date(),\n            user: {\n                _id: 'Admin',\n                name: 'Admin',\n                avatar: 'https://static-s.aa-cdn.net/img/gp/20600014266053/JVWGO91AFGOSfDoqO3V_YlUiWnCoiyob0aPkVOss0qASb26aRbXvWiiNK12ZFLxfsSw=s300?v=1'\n            },\n            video: geturls\n        }\n\n        const {\n            _id,\n            createdAt,\n            text,\n            user,\n            video,\n            received\n        } = [msg][0]\n        db.collection(chatname).add({\n            _id,\n            createdAt,\n            text,\n            user,\n            video,\n            received: false\n        })\n        insertChatLog(chatname, menu)\n\n    }\n\n    const insertChatLog = async (getchatText, getmenuChat) => {\n        // alert(\"chatName\" + chatName + '  shopCode ' + shopCode + ' menu ' + menuChat)\n        var Data = {\n            shopcode: 'admin',\n            chatname: getchatText,\n            menu: getmenuChat,\n            status: 'unread'\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat/insert_chat_log.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n            const json = await response.json()\n            if (json[0].Message == 'Complete') {\n                //  getUser()\n            }\n            // alert(json[0].Message)\n        } catch (error) {\n            //   alert(error)\n            console.error(error)\n        }\n    }\n\n    const renderBubble = (props) => {\n        return (\n            <Bubble\n                {...props}\n                tickStyle={{\n                    color: props.currentMessage.received ? '#00FF00' : '#454545'\n                }}\n                timeTextStyle={{\n                    right: {\n                        color: 'rgb(255,255,255)'\n                    },\n                    left: {\n                        color: 'rgb(0,0,0)'\n                    },\n                }}\n                textStyle={{\n                    right: {\n                        color: 'rgb(255,255,255)'\n                    },\n                    left: {\n                        color: 'rgb(0,0,0)'\n                    },\n\n                }}\n                wrapperStyle={{\n                    right:\n                    {\n                        backgroundColor: 'rgba(0,102,204,1)',\n                        borderRadius: 15\n                    },\n                    left:\n                    {\n                        backgroundColor: 'rgb(255,255,255)',\n                        borderRadius: 15\n                    }\n                }}\n                quickReplyStyle={{\n                    color: 'rgba(0,102,204,1)',\n                    borderWidth: 2,\n                    borderRadius: 30,\n                    backgroundColor: 'rgb(255,255,255)'\n                }}\n\n            />\n        );\n    };\n\n    const renderMessageVideo = (props) => {\n        const { currentMessage } = props;\n        return (\n            <View style={{ position: 'relative', height: 150, width: 250 }}>\n                <Video\n                    resizeMode=\"cover\"\n                    height={150}\n                    width={250}\n                    useNativeControls\n                    shouldPlay={false}\n                    source={{ uri: currentMessage.video }}\n                />\n            </View>\n        );\n    };\n\n    const submit = async () => {\n        const res = window.confirm(\"ยืนยันปิดการสนทนา \" + shopname);\n\n        if (res) {\n            // show your message success\n            console.log(\"fofonn submit\")\n            updateChat()\n        }\n    }\n\n    const updateChat = async () => {\n        var Data = {\n            chatname: chatname,\n            status: 'no'\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat/close_chat.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n            const json = await response.json()\n            if (json[0].Message == 'Complete') {\n                console.log(\"fofonn Complete\")\n                navigation.dispatch(CommonActions.goBack());\n            }\n            // alert(json[0].Message)\n        } catch (error) {\n            alert(error)\n            console.error(error)\n        }\n    }\n\n    return (\n\n        <View style={{ flex: 1, backgroundColor: \"lightgray\" }} >\n            <View\n                style={{\n                    flexDirection: \"row\",\n                    height: 40,\n                    padding: 0\n                }}\n            >\n                <View style={{ backgroundColor: \"#0089FC\", flex: 3 }}>\n                    <Text style={styles.titleText}>{shopname}</Text>\n                </View>\n                <View style={{ backgroundColor: \"#0089FC\", flex: 0.5 }}>\n                    <Button title=\"ปิดการสนทนา\" style={styles.button}\n                        color={\"blue\"}\n                        onPress={() => submit()}\n                    />\n                </View>\n            </View>\n            <GiftedChat\n                messages={messages}\n                showAvatarForEveryMessage={true}\n                renderBubble={renderBubble}\n                renderMessageVideo={renderMessageVideo}\n                onSend={messages => onSend(messages)}\n                user={{\n                    _id: 'Admin',\n                    name: 'Admin',\n                    avatar: 'https://static-s.aa-cdn.net/img/gp/20600014266053/JVWGO91AFGOSfDoqO3V_YlUiWnCoiyob0aPkVOss0qASb26aRbXvWiiNK12ZFLxfsSw=s300?v=1'\n                }}\n            />\n            <View\n                style={{\n                    flexDirection: \"row\",\n                    height: 25,\n                    padding: 0,\n                    marginLeft: 20\n                }}\n            >\n                <View style={{ backgroundColor: \"lightgray\" }}>\n                    <div style={{ textAlign: \"right\", marginRight: 10 }} >\n                        <input type=\"file\" id=\"upload-file\" hidden onChange={handleChange} onDrop={handleUpload} accept=\"image/*\" />\n                        <label for=\"upload-file\">เลือกรูปภาพ</label>\n                    </div>\n                </View>\n                <View style={{ backgroundColor: \"lightgray\" }}>\n                    <div>\n                        <button style={{ backgroundColor: 'rgba(0,102,204,1)', borderRadius: 10, color: '#fff', marginRight: 10 }} onClick={handleUpload}>ส่งรูป</button>\n                    </div>\n\n                </View>\n                <View style={{ backgroundColor: \"lightgray\" }}>\n                    <div style={{ textAlign: \"right\", marginRight: 10 }} >\n                        <input type=\"file\" id=\"upload-file-video\" hidden onChange={handleChangevdo} accept=\"video/*\" />\n                        <label for=\"upload-file-video\">เลือกวิดีโอ</label>\n                    </div>\n\n                </View>\n                <View style={{ backgroundColor: \"lightgray\" }}>\n                    <div>\n                        <button style={{ backgroundColor: 'rgba(0,102,204,1)', borderRadius: 10, color: '#fff', marginRight: 10 }} onClick={handleUploadvdo}>ส่งวิดีโอ</button>\n                    </div>\n                </View>\n            </View>\n\n        </View>\n    )\n}\nexport default ChatPage\nconst styles = StyleSheet.create({\n    Img: {\n        height: 50,\n        width: 50,\n        borderRadius: 25\n    },\n    namechats: {\n        /// flex: 1,\n        // justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#0089FC',\n        height: 40\n    },\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        backgroundColor: 'white',\n    },\n    titleText: {\n        textAlign: 'center',\n        backgroundColor: '#0089FC',\n        fontSize: 20,\n        padding: 5,\n        color: '#fff',\n        height: 40\n\n    },\n    notiText: {\n        textAlign: 'center',\n        backgroundColor: 'red',\n        fontSize: 10,\n        padding: 5,\n        marginTop: 5,\n        marginRight: 5,\n        color: '#fff',\n        height: 20,\n        width: 20,\n        borderRadius: 10\n    },\n    sectionListItemStyle: {\n        fontSize: 15,\n        padding: 15,\n        color: '#000',\n        backgroundColor: 'white',\n    },\n    listItemSeparatorStyle: {\n        height: 0.5,\n        width: '100%',\n        backgroundColor: '#C8C8C8',\n    },\n    button: {\n        justifyContent: 'center',\n        width: 250,\n        height: 40,\n        borderRadius: 10\n    },\n\n});","import React from 'react'\nimport { View, StyleSheet, Image, Button } from 'react-native'\n\nconst MenuScreen = ({ navigation }) => {\n\n    return (\n\n        <View style={style.container}>\n            <Image\n                source={require(\"../assets/Pepsi-Logo.png\")}\n                resizeMode=\"contain\"\n                style={style.logo1}\n            ></Image>\n\n            <View style={[style.containerrow, {\n\n                flexDirection: \"row\"\n            }]}>\n\n\n                <Button title=\"Live Chat\" style={style.button}\n                    color={\"#EE0000\"}\n                    onPress={() => navigation.navigate('Group')}\n                />\n\n                &nbsp; &nbsp; &nbsp; &nbsp;\n\n\n                <Button title=\"History\" style={style.button}\n                    color={\"#EE0000\"} width='250' height='100'\n                    onPress={() => navigation.navigate('History')}\n                />\n            </View>\n        </View>\n    )\n}\nexport default MenuScreen\nconst style = StyleSheet.create({\n    button: {\n        width: 250,\n        height: 100,\n        marginTop: 20\n    },\n    container: {\n        flex: 1,\n        backgroundColor: \"rgba(0,102,204,1)\",\n        alignItems: \"center\",\n        padding: 10\n    },\n    containerrow: {\n        //  flex: 1,\n        backgroundColor: \"rgba(0,102,204,1)\",\n        alignItems: \"center\",\n        padding: 10\n    },\n    logo1: {\n        height: 150,\n        width: 220\n    },\n\n\n})","import React from 'react'\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\n\nexport const ExportToExcel = ({ apiData, fileName }) => {\n    const fileType =\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n    const fileExtension = \".xlsx\";\n\n    const exportToCSV = (apiData, fileName) => {\n        const ws = XLSX.utils.json_to_sheet(apiData);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension);\n    };\n\n    return (\n        <button onClick={(e) => exportToCSV(apiData, fileName)} style={{\n            backgroundColor: \"#145A32\", height: 40, borderRadius: 10, color: \"#ffffff\"\n        }}>Download Excel</button>\n    );\n};","import React, { useEffect, useState } from 'react'\nimport { SectionList, StyleSheet, Text, View, Image, Alert, Modal, Pressable} from 'react-native';\nimport { db } from '../firebase';\nimport { GiftedChat } from 'react-native-gifted-chat';\nimport { FlatList } from 'react-native';\nimport { SearchBar } from 'react-native-elements';\nimport { DataTable, IconButton } from 'react-native-paper';\nimport { Video, Audio } from 'expo-av';\n\nimport axios from 'axios'\nimport { ExportToExcel } from './ExportToExcel'\n\nconst HistoryScreen = ({ navigation }) => {\n    const [modalVisible, setModalVisible] = useState(false);\n    const [messages, setMessages] = useState([]);\n\n    const [titleText, setTitleText] = useState(\"\")\n    const [shopDisplayImage, setShopDisplayImage] = useState(\"\")\n    const [shopCodeText, setShopCodeText] = useState(\"\")\n    const [shopNameText, setShopNameText] = useState(\"\")\n    const [shopTellText, setShopTellText] = useState(\"\")\n    const [shopAddressText, setShopAddressText] = useState(\"\")\n    const [shopChatNameText, setShopChatNameText] = useState(\"\")\n    const [shopMenu, setShopMenu] = useState(\"\")\n\n    var chatName = ''\n\n    const [search, setSearch] = useState('');\n    const [filteredDataSource1, setFilteredDataSource1] = useState([]);\n    const [masterDataSource1, setMasterDataSource1] = useState([]);\n    const [filteredDataSource2, setFilteredDataSource2] = useState([]);\n    const [masterDataSource2, setMasterDataSource2] = useState([]);\n    const [filteredDataSource3, setFilteredDataSource3] = useState([]);\n    const [masterDataSource3, setMasterDataSource3] = useState([]);\n    const [filteredDataSource4, setFilteredDataSource4] = useState([]);\n    const [masterDataSource4, setMasterDataSource4] = useState([]);\n    const [filteredDataSource5, setFilteredDataSource5] = useState([]);\n    const [masterDataSource5, setMasterDataSource5] = useState([]);\n\n    const [filteredDataSource6, setFilteredDataSource6] = useState([]);\n    const [masterDataSource6, setMasterDataSource6] = useState([]);\n\n    const [data, setData] = React.useState([])\n    const fileName = \"Export_Chat_Report\"; // here enter filename for your excel file\n\n\n    React.useEffect(() => {\n\n        const fetchData = () => {\n            axios.get('https://school.treesbot.com/pepsichat/export_chat_all.php').then(r => setData(r.data))\n        }\n        fetchData()\n\n    }, [])\n\n\n    const getUser = async (menu) => {\n        var Data = {\n            menu: menu,\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat/select_user_menu.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n            const json = await response.json()\n            if (menu == 'group1') {\n                setFilteredDataSource1(json);\n                setMasterDataSource1(json);\n                onPressTitle(json[0].displayimage, json[0].shopname, json[0].shopcode, json[0].tell, json[0].address, json[0].chatname, json[0].menu)\n                getTable(json[0].shopcode)\n            } else if (menu == 'group2') {\n                setFilteredDataSource2(json);\n                setMasterDataSource2(json);\n            } else if (menu == 'group3') {\n                setFilteredDataSource3(json);\n                setMasterDataSource3(json);\n            } else if (menu == 'group4') {\n                setFilteredDataSource4(json);\n                setMasterDataSource4(json);\n            } else if (menu == 'group5') {\n                setFilteredDataSource5(json);\n                setMasterDataSource5(json);\n            } else if (menu == '') {\n                setFilteredDataSource6(json);\n                setMasterDataSource6(json);\n            }\n        } catch (error) {\n            console.error(error)\n        } \n    }\n\n    useEffect(() => {\n        getUser('group1')\n        getUser('group2')\n        getUser('group3')\n        getUser('group4')\n        getUser('group5')\n        getUser('')\n\n    }, [])\n\n    const searchFilterFunction = (text) => {\n        // Check if searched text is not blank\n        if (text) {\n            // Inserted text is not blank\n            // Filter the masterDataSource\n            // Update FilteredDataSource\n            const newData1 = masterDataSource1.filter(function (item) {\n                const itemData = item.shopcode\n                    ? item.shopcode.toUpperCase()\n                    : ''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData) > -1;\n            });\n            const newData2 = masterDataSource2.filter(function (item) {\n                const itemData = item.shopcode\n                    ? item.shopcode.toUpperCase()\n                    : ''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData) > -1;\n            });\n            const newData3 = masterDataSource3.filter(function (item) {\n                const itemData = item.shopcode\n                    ? item.shopcode.toUpperCase()\n                    : ''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData) > -1;\n            });\n            const newData4 = masterDataSource4.filter(function (item) {\n                const itemData = item.shopcode\n                    ? item.shopcode.toUpperCase()\n                    : ''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData) > -1;\n            });\n            const newData5 = masterDataSource5.filter(function (item) {\n                const itemData = item.shopcode\n                    ? item.shopcode.toUpperCase()\n                    : ''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData) > -1;\n            });\n            const newData6 = masterDataSource6.filter(function (item) {\n                const itemData = item.shopcode\n                    ? item.shopcode.toUpperCase()\n                    : ''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData) > -1;\n            });\n            setFilteredDataSource1(newData1);\n            setFilteredDataSource2(newData2);\n            setFilteredDataSource3(newData3);\n            setFilteredDataSource4(newData4);\n            setFilteredDataSource5(newData5);\n            setFilteredDataSource6(newData6)\n\n            setSearch(text);\n        } else {\n            // Inserted text is blank\n            // Update FilteredDataSource with masterDataSource\n            setFilteredDataSource1(masterDataSource1);\n            setFilteredDataSource2(masterDataSource2);\n            setFilteredDataSource3(masterDataSource3);\n            setFilteredDataSource4(masterDataSource4);\n            setFilteredDataSource5(masterDataSource5);\n            setFilteredDataSource6(masterDataSource6)\n\n            setSearch(text);\n        }\n    };\n\n    const onPressChat = (chatname) => {\n        chatName = chatname\n        setModalVisible(true)\n        readUser()\n    };\n\n    async function readUser() {\n        const unsubscribe = db.collection(chatName).orderBy('createdAt', 'desc').onSnapshot(snapshot => setMessages(\n            snapshot.docs.map(doc => ({\n                _id: doc.data()._id,\n                createdAt: doc.data().createdAt.toDate(),\n                text: doc.data().text,\n                user: doc.data().user,\n                image: doc.data().image,\n                video: doc.data().video\n                \n            }))\n        ))\n        return () => unsubscribe;\n    }\n\n    const FlatListItemSeparator = () => {\n        return (\n            //Item Separator\n            <View style={styles.listItemSeparatorStyle} />\n        );\n    };\n\n    const onPressTitle = (displayimage, username, shopcode, tell, address, chatname, menu) => {\n        chatName = chatname\n        let getTitle = shopcode + ' (' + username + ')'\n\n        setTitleText(getTitle);\n        setShopDisplayImage(displayimage)\n        setShopNameText(username);\n        setShopCodeText(shopcode);\n        setShopTellText(tell);\n        setShopAddressText(address);\n        setShopChatNameText(chatname);\n        setShopMenu(menu);\n\n        getTable(shopcode);\n    };\n\n    const [dataTable, setDataTable] = useState([]);\n\n    const getTable = async (shopcode) => {\n        var Data = {\n            shopcode: shopcode,\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat/select_user_shopcode.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n            const json = await response.json()\n            setDataTable(json);\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    const test2 = (menu) => {\n        var groupname = ''\n        if (menu == 'group1') {\n            groupname = 'แจ้งปัญหาจากกิจกรรมถ่ายรูปตู้แช่'\n        } else if (menu == 'group2') {\n            groupname = 'สอบถาม, ติดตาม หรือแจ้งปัญหาการแลกของรางวัล'\n        } else if (menu == 'group3') {\n            groupname = 'สอบถามหรือแจ้งปัญหาการใช้งานแอพพลิเคชั่นด้านอื่นๆ'\n        } else if (menu == 'group4') {\n            groupname = 'สอบถามรายละเอียดทั่วไป'\n        } else if (menu == 'group5') {\n            groupname = 'แอด LINE เป๊ปซี่แฟนคลับ'\n        } else if (menu == '') {\n            groupname = 'ไม่ได้เลือกหัวข้อสนทนา'\n        }\n        return groupname\n    }\n    const _renderItem = ({ item }) => (\n        <DataTable.Row>\n            <DataTable.Cell style={{ flex: 1 }}>{item.num}</DataTable.Cell>\n            <DataTable.Cell style={{ flex: 2 }}>{item.dateinsert}</DataTable.Cell>\n            <DataTable.Cell style={{ flex: 3 }}>{test2(item.menu)}</DataTable.Cell>\n            <DataTable.Cell style={{ flex: 1 }}><IconButton\n                icon=\"eye\"\n                color={'blue'}\n                size={20}\n                onPress={() => onPressChat(item.chatname)}\n            />\n            </DataTable.Cell>\n\n        </DataTable.Row>\n    );\n\n    const renderMessageVideo = (props) => {\n        const { currentMessage } = props;\n        return (\n            <View style={{ position: 'relative', height: 150, width: 250 }}>\n                <Video\n                    resizeMode=\"cover\"\n                    height={150}\n                    width={250}\n                    useNativeControls\n                    shouldPlay={false}\n                    source={{ uri: currentMessage.video }}\n                    style={styles.video}\n                />\n            </View>\n        );\n    };\n\n    return (\n\n        <View style={[styles.container, {\n            // Try setting `flexDirection` to `\"row\"`.\n            flexDirection: \"row\"\n        }]}>\n            <View style={{ flex: 1, backgroundColor: \"white\" }, styles.container}>\n                <ExportToExcel apiData={data} fileName={fileName} />\n                <SearchBar\n                    lightTheme\n                    round\n                    searchIcon={{ size: 24 }}\n                    onChangeText={(text) => searchFilterFunction(text)}\n                    onClear={(text) => searchFilterFunction('')}\n                    placeholder=\"ค้นหาจากรหัสร้านค้า...\"\n                    value={search}\n                />\n\n                <SectionList\n                    ItemSeparatorComponent={FlatListItemSeparator}\n                    sections={[\n                        { title: 'แจ้งปัญหาจากกิจกรรมถ่ายรูปตู้แช่', data: filteredDataSource1 },\n                        { title: 'สอบถาม, ติดตาม หรือแจ้งปัญหาการแลกของรางวัล', data: filteredDataSource2 },\n                        { title: 'สอบถามหรือแจ้งปัญหาการใช้งานแอพพลิเคชั่นด้านอื่นๆ', data: filteredDataSource3 },\n                        { title: 'สอบถามรายละเอียดทั่วไป', data: filteredDataSource4 },\n                        { title: 'แอด LINE เป๊ปซี่แฟนคลับ', data: filteredDataSource5 },\n                        { title: 'ไม่ได้เลือกหัวข้อสนทนา', data: filteredDataSource6 },\n\n                    ]}\n                    renderSectionHeader={({ section }) => (\n                        <Text style={styles.groupText}> {section.title} </Text>\n                    )}\n                    renderItem={({ item }) => (\n                        // Single Comes here which will be repeatative for the FlatListItems\n                        <View style={{ flex: 1, flexDirection: 'row', marginLeft: 20}}>\n                            <Image\n                                source={{ uri: item.displayimage }}\n                                style={styles.Img}\n                            />\n                            <Text\n                                style={styles.sectionListItemStyle}\n                                //Item Separator View\n                                onPress={() => onPressTitle(item.displayimage, item.shopname, item.shopcode, item.tell, item.address, item.chatname, item.menu)}>\n\n                                {item.shopcode} ({item.shopname})\n                            </Text>\n\n                        </View>\n                    )}\n                    keyExtractor={(item, index) => index}\n                />\n            </View>\n            <View style={{ flex: 2, backgroundColor: \"#0089FC\" }} >\n                <Modal\n                    animationType=\"slide\"\n                    transparent={true}\n                    visible={modalVisible}\n                    onRequestClose={() => {\n                        Alert.alert(\"Modal has been closed.\");\n                        setModalVisible(!modalVisible);\n                    }}\n                >\n                    <View style={styles.centeredView}>\n                        <View style={styles.modalView}>\n                            <GiftedChat\n                                messages={messages}\n                                showAvatarForEveryMessage={true}\n                                renderMessageVideo={renderMessageVideo}\n                                user={{\n                                    _id: 'Admin',\n                                    name: 'Admin',\n                                    avatar: 'https://static-s.aa-cdn.net/img/gp/20600014266053/JVWGO91AFGOSfDoqO3V_YlUiWnCoiyob0aPkVOss0qASb26aRbXvWiiNK12ZFLxfsSw=s300?v=1'\n                                }}\n                                renderInputToolbar={() => { return null }}\n                            />\n                            <Pressable\n                                style={[styles.button, styles.buttonClose]}\n                                onPress={() => setModalVisible(!modalVisible)}\n                            >\n                                <Text style={styles.textStyle}>ปิด</Text>\n                            </Pressable>\n                        </View>\n                    </View>\n                </Modal>\n                <View\n                    style={{\n                        backgroundColor: \"white\",\n                        flexDirection: \"row\",\n                        height: 150,\n                        padding: 0,\n                        borderRadius: 20,\n                        marginTop: 20,\n                        marginLeft: 20,\n                        marginRight: 20\n                    }}\n                >\n                    <View style={{ flex: 1}}>\n                        <Image\n                            source={{ uri: shopDisplayImage }}\n                            style={styles.Img2}\n                        />\n                    </View>\n                    <View style={{ flex: 2 }}>\n                        <Text style={styles.titleText}><b>{titleText}</b></Text>\n                        <Text style={styles.titleText}>รหัสร้านค้า : {shopCodeText}</Text>\n                        <Text style={styles.titleText}>เบอร์โทรติดต่อ : {shopTellText}</Text>\n                        <Text style={styles.titleText}>ที่อยู่ : {shopAddressText}</Text>\n                    </View>\n                </View>\n                <View style={{\n                    backgroundColor: \"white\",\n                    flexDirection: \"row\",\n                    borderRadius: 20,\n                    marginTop: 10,\n                    marginLeft: 20,\n                    marginRight: 20,\n                    marginBottom: 10\n                }}>\n                    <DataTable>\n                        <DataTable.Header>\n                            <DataTable.Title style={{ flex: 1 }}>No</DataTable.Title>\n                            <DataTable.Title style={{ flex: 2 }}>Date</DataTable.Title>\n                            <DataTable.Title style={{ flex: 3 }}>Message</DataTable.Title>\n                            <DataTable.Title style={{ flex: 1 }}>Action</DataTable.Title>\n\n                        </DataTable.Header>\n\n                        <FlatList data={dataTable} renderItem={_renderItem} />\n                    </DataTable>\n                </View>\n            </View>\n        </View >\n      \n    )\n}\nexport default HistoryScreen\n\nconst styles = StyleSheet.create({\n    Img: {\n        height: 50,\n        width: 50,\n        borderRadius: 25\n    },\n    Img2: {\n        marginTop: 25,\n        marginLeft: 50,\n        height: 100,\n        width: 100,\n        borderRadius: 75\n    },\n    namechats: {\n        /// flex: 1,\n        // justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#0089FC',\n        height: 40\n    },\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        backgroundColor: 'white',\n    },\n    container2: {\n        /// flex: 1,\n        // justifyContent: 'center',\n        backgroundColor: 'white',\n        height: 400,\n        width: 600\n    },\n    groupText: {\n        backgroundColor: 'gray',\n        fontSize: 18,\n        padding: 5,\n        color: 'white',\n    },\n    titleText: {\n        fontSize: 16,\n        padding: 5,\n        color: 'black',\n    },\n    sectionListItemStyle: {\n        fontSize: 15,\n        padding: 15,\n        color: '#000',\n        backgroundColor: 'white',\n    },\n    listItemSeparatorStyle: {\n        height: 0.5,\n        width: '100%',\n        backgroundColor: '#C8C8C8',\n    },\n    centeredView: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginTop: 22\n    },\n    modalView: {\n        flex: 1,\n        margin: 20,\n        backgroundColor: \"white\",\n        borderRadius: 20,\n        width: 500,\n        height: 500,\n        padding: 35,\n        alignItems: \"center\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 4,\n        elevation: 5\n    },\n    button: {\n        borderRadius: 20,\n        padding: 10,\n        elevation: 2\n    },\n    buttonOpen: {\n        backgroundColor: \"#F194FF\",\n    },\n    buttonClose: {\n        backgroundColor: \"#2196F3\",\n    },\n    textStyle: {\n        color: \"white\",\n        fontWeight: \"bold\",\n        textAlign: \"center\"\n    },\n    modalText: {\n        marginBottom: 15,\n        textAlign: \"center\"\n    }\n});\n\n","import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport ChatGroup from './screens/ChatGroup';\nimport ChatPage from './screens/ChatPage';\nimport MenuScreen from './screens/MenuScreen';\nimport HistoryScreen from './screens/HistoryScreen';\n\nconst Stack = createStackNavigator();\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator screenOptions={{ headerTitleAlign: 'center' }}>\n        <Stack.Screen name='Menu' component={MenuScreen} />\n        <Stack.Screen name='Group' component={ChatGroup} />\n        <Stack.Screen name='Chat' component={ChatPage} />\n        <Stack.Screen name='History' component={HistoryScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/media/Pepsi-Logo.32560c85.png\";"],"sourceRoot":""}