{"version":3,"sources":["assets/Pepsi-Logo.png","firebase.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ChatScreen3.js","screens/MenuScreen.js","screens/ExportToExcel.js","screens/HistoryScreen.js","screens/HistoryScreen2.js","screens/MainMenuScreen.js","App.js","screens/TeatList.js","assets/history.jpg","assets/history1.png","assets/history2.png","assets/history3.png","assets/imagehistory2.png","assets/chathistory.png","assets/checkin.jpg"],"names":["module","exports","db","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","firestore","auth","storage","LoginScreen","navigation","useState","email","setEmail","password","setPassword","useEffect","onAuthStateChanged","user","uid","navigate","canGoBack","popToTop","View","style","container","Image","source","require","resizeMode","logo1","containercenter","textview","label","value","onChangeText","text","title","button","onPress","signInWithEmailAndPassword","catch","error","errorMessage","message","alert","StyleSheet","create","height","width","marginTop","flex","alignItems","backgroundColor","padding","RegisterScreen","name","setName","imageURL","setImageURL","placeholder","leftIcon","type","createUserWithEmailAndPassword","then","userCredential","updateProfile","displayName","photoURL","ChatScreen3","messages","setMessages","titleText","setTitleText","shopCodeText","setShopCodeText","setShopNameText","chatText","setChatText","menuText","setMenuText","count","setCount","shopCode","chatName","menuChat","search","setSearch","filteredDataSource","setFilteredDataSource","masterDataSource","setMasterDataSource","getUser","a","async","fetch","response","json","onPressTitle","shopname","shopcode","chatname","menu","console","searchFilterFunction","newData","filter","item","itemData","toUpperCase","textData","indexOf","updateChat","getchatText","Data","status","method","body","JSON","stringify","Message","insertChatLog","getmenuChat","countTimer","setInterval","manageTimer","clearInterval","selectChatLog","selectChatLogL","collection","where","get","querySnapshot","forEach","doc","ref","update","received","onSend","useCallback","_id","createdAt","add","useLayoutEffect","setOptions","headerRight","marginRight","signOut","AntDesign","size","color","replace","readUser","getshopcode","getchatName","unsubscribe","orderBy","onSnapshot","snapshot","docs","map","data","toDate","image","video","images","setImages","videos","setVideos","setUrls","setProgress","uploadImagePicked","geturls","msg","Math","random","toString","substring","Date","avatar","uploadVideosPicked","styles","flexDirection","lightTheme","round","searchIcon","onClear","SectionList","ItemSeparatorComponent","listItemSeparatorStyle","sections","renderItem","marginLeft","uri","displayimage","Img","Text","sectionListItemStyle","updateChatLog","textAlign","chatcolor","fontSize","borderRadius","chatcount","keyExtractor","index","Button","window","confirm","showAvatarForEveryMessage","renderBubble","props","tickStyle","currentMessage","timeTextStyle","right","left","textStyle","wrapperStyle","quickReplyStyle","borderWidth","renderMessageVideo","position","Video","useNativeControls","shouldPlay","id","hidden","onChange","e","i","newImage","target","files","prevState","accept","for","onClick","date","getDate","month","getMonth","year","getFullYear","hours","getHours","min","getMinutes","sec","getSeconds","filename","promises","uploadTask","put","push","on","progress","bytesTransferred","totalBytes","log","child","getDownloadURL","urls","namechats","justifyContent","notiText","MenuScreen","containerrow","ExportToExcel","apiData","fileName","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","HistoryScreen","modalVisible","setModalVisible","shopDisplayImage","setShopDisplayImage","shopTellText","setShopTellText","shopAddressText","setShopAddressText","setShopChatNameText","setShopMenu","filteredDataSource1","setFilteredDataSource1","masterDataSource1","setMasterDataSource1","filteredDataSource2","setFilteredDataSource2","masterDataSource2","setMasterDataSource2","filteredDataSource3","setFilteredDataSource3","masterDataSource3","setMasterDataSource3","filteredDataSource4","setFilteredDataSource4","masterDataSource4","setMasterDataSource4","filteredDataSource5","setFilteredDataSource5","masterDataSource5","setMasterDataSource5","filteredDataSource6","setFilteredDataSource6","masterDataSource6","setMasterDataSource6","React","setData","axios","r","tell","address","getTable","newData1","newData2","newData3","newData4","newData5","newData6","onPressChat","username","dataTable","setDataTable","test2","groupname","renderSectionHeader","section","groupText","Modal","animationType","transparent","visible","onRequestClose","Alert","centeredView","modalView","renderInputToolbar","Pressable","buttonClose","Img2","marginBottom","DataTable","Header","Title","FlatList","Row","Cell","num","dateinsert","IconButton","icon","container2","margin","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","buttonOpen","fontWeight","modalText","HistoryScreen2","img1","img2","img3","sectionHeaderStyle","logo","MainMenuScreen","countNoti","setCountNoti","countColorBG","setCountColorBG","countColorTXT","setCountColorTXT","chatcolorbg","chatcolortxt","containerText","Stack","createStackNavigator","App","NavigationContainer","Navigator","screenOptions","headerTitleAlign","Screen","component"],"mappings":"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","file":"static/js/app.abb09067.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Pepsi-Logo.32560c85.png\";","import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/storage';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDBCB00CkxHXwiAxqtj369EKv5M5OCgslc\",\n    authDomain: \"pepsi-coolerfan-chat-2d9ab.firebaseapp.com\",\n    databaseURL: \"gs://pepsi-coolerfan-chat-2d9ab.appspot.com\",\n    projectId: \"pepsi-coolerfan-chat-2d9ab\",\n    storageBucket: \"pepsi-coolerfan-chat-2d9ab.appspot.com\",\n    messagingSenderId: \"967346529141\",\n    appId: \"1:967346529141:web:87311021ef0ced75a9e93c\"\n};\nlet app;\n\nif (firebase.apps.length === 0) {\n    app = firebase.initializeApp(firebaseConfig)\n} else {\n    app = firebase.app();\n}\n\nconst db = app.firestore();\nconst auth = firebase.auth();\nconst storage = firebase.storage();\n\nexport { db, auth, storage};\n","import React, { useEffect, useState } from 'react'\nimport { View, StyleSheet, Image } from 'react-native'\nimport { Input, Button } from 'react-native-elements';\nimport { auth } from '../firebase';\n\nconst LoginScreen = ({ navigation }) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const signIn = () => {\n      //  auth.signInWithEmailAndPassword(email, password)\n        auth.signInWithEmailAndPassword('fon@init.co.th', '123456')\n            .catch((error) => {\n                var errorMessage = error.message;\n                alert(errorMessage)\n            });\n    }\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged((user) => {\n            if (user) {\n                // User is signed in, see docs for a list of available properties\n                // https://firebase.google.com/docs/reference/js/firebase.User\n                var uid = user.uid;\n                navigation.navigate('Main');\n            } else {\n                // User is signed out\n                navigation.canGoBack() && navigation.popToTop();\n            }\n        });\n        return unsubscribe\n    }, [])\n    return (\n        <View style={style.container}>\n            <Image\n                source={require(\"../assets/Pepsi-Logo.png\")}\n                resizeMode=\"contain\"\n                style={style.logo1}\n            ></Image>\n            <View style={style.containercenter}>\n                <Input\n                    //placeholder=\"Enter your email\"\n                    style={style.textview}\n                    label=\"Username\"\n                    // leftIcon={{ type: 'material', name: 'email'}}\n                    value={email}\n                    onChangeText={text => setEmail(text)}\n                />\n\n                <Input\n                    // placeholder=\"Enter your password\"\n                    style={style.textview}\n                    label=\"Password\"\n                    // leftIcon={{ type: 'material', name: 'lock'}}\n                    value={password}\n                    onChangeText={text => setPassword(text)}\n                />\n                <Button\n                    title=\"เข้าสู่ระบบ\"\n                    style={style.button}\n                    onPress={signIn}\n                />\n            </View>\n        </View>\n    )\n}\nexport default LoginScreen\nconst style = StyleSheet.create({\n    logo1: {\n        height: 150,\n        width: 220\n    },\n    button: {\n        width: 200,\n        marginTop: 10\n    },\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        backgroundColor: \"rgba(0,102,204,1)\",\n        //padding: 10\n    },\n    containercenter: {\n        flex: 1,\n        alignItems: 'center',\n        backgroundColor: \"rgba(0,102,204,1)\",\n        padding: 10\n    },\n    textview: {\n        backgroundColor: \"rgba(255,255,255,1)\"\n    },\n\n})","import { NavigationContainer } from '@react-navigation/native';\nimport React, { useState } from 'react'\nimport { View, StyleSheet } from 'react-native'\nimport { Input, Button } from 'react-native-elements';\nimport { auth } from '../firebase';\nconst RegisterScreen = ({ navigation} ) => {\n    const [email, setEmail] = useState('');\n    const [name, setName] = useState('');\n    const [password, setPassword] = useState('');\n    const [imageURL, setImageURL] = useState('');\n    const register = () => {\n        auth.createUserWithEmailAndPassword(email, password)\n            .then((userCredential) => {\n                // Signed in \n                var user = userCredential.user;\n                user.updateProfile({\n                    displayName: name,\n                    photoURL: imageURL ? imageURL : \"https://cdn.pixabay.com/photo/2017/12/16/06/41/avatar-3022215_960_720.jpg\"\n                }).then(() => {\n                    // Update successful\n                    // ...\n                }).catch((error) => {\n                    // An error occurred\n                    // ...\n                });\n                navigation.popToTop;\n            })\n            .catch((error) => {\n                var errorMessage = error.message;\n                alert(errorMessage)\n            });\n    }\n\n    return (\n        <View style={style.container}>\n            <Input\n                placeholder=\"Enter your email\"\n                label=\"Email\"\n                leftIcon={{ type: 'material', name: 'email' }}\n                value={email}\n                onChangeText={text => setEmail(text)}\n            />\n            <Input\n                placeholder=\"Enter your name\"\n                label=\"Name\"\n                leftIcon={{ type: 'material', name: 'badge' }}\n                value={name}\n                onChangeText={text => setName(text)}\n            />\n            <Input\n                placeholder=\"Enter your password 6 digit\"\n                label=\"Password\"\n                leftIcon={{ type: 'material', name: 'lock' }}\n                value={password}\n                onChangeText={text => setPassword(text)}\n            />\n            <Input\n                placeholder=\"Enter your image URL\"\n                label=\"Profile Picture\"\n                leftIcon={{ type: 'material', name: 'face' }}\n                value={imageURL}\n                onChangeText={text => setImageURL(text)}\n            />\n\n            <Button title=\"register\" style={style.button} onPress={register}\n            />\n\n        </View>\n    )\n}\nexport default RegisterScreen\nconst style = StyleSheet.create({\n    button: {\n        width: 200,\n        marginTop: 10\n    },\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        padding: 10\n    }\n})","import React, { useEffect, useLayoutEffect, useState, useCallback } from 'react'\nimport { SectionList, StyleSheet, Text, View, Image, Button } from 'react-native';\nimport { auth, db, storage } from '../firebase';\nimport { AntDesign } from '@expo/vector-icons';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { GiftedChat, Bubble, Time } from 'react-native-gifted-chat';\nimport { SearchBar } from 'react-native-elements';\nimport { Input } from 'react-native-elements/dist/input/Input';\nimport { Video, Audio } from 'expo-av';\n\nconst ChatScreen3 = ({ navigation }) => {\n    const [messages, setMessages] = useState([]);\n    const [titleText, setTitleText] = useState(\"\");\n    const [shopCodeText, setShopCodeText] = useState(\"\");\n    const [shopNameText, setShopNameText] = useState(\"\");\n    const [chatText, setChatText] = useState(\"\");\n    const [menuText, setMenuText] = useState(\"\");\n\n    const [count, setCount] = useState(3);\n\n    var shopCode = ''\n    var chatName = ''\n    var menuChat = ''\n    const [search, setSearch] = useState('');\n    const [filteredDataSource, setFilteredDataSource] = useState([]);\n    const [masterDataSource, setMasterDataSource] = useState([]);\n\n    const getUser = async () => {\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat/select_user_and_log.php')\n            const json = await response.json()\n            setFilteredDataSource(json);\n            setMasterDataSource(json);\n            onPressTitle(json[0].shopname, json[0].shopcode, json[0].chatname, json[0].menu)\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    const searchFilterFunction = (text) => {\n        // Check if searched text is not blank\n        if (text) {\n            setCount(0)\n            // Inserted text is not blank\n            // Filter the masterDataSource\n            // Update FilteredDataSource\n            const newData = masterDataSource.filter(function (item) {\n                const itemData = item.shopcode\n                    ? item.shopcode.toUpperCase()\n                    : ''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData) > -1;\n            });\n            setFilteredDataSource(newData);\n            setSearch(text);\n        } else {\n            setCount(3)\n            // Inserted text is blank\n            // Update FilteredDataSource with masterDataSource\n            setFilteredDataSource(masterDataSource);\n            setSearch(text);\n        }\n    };\n\n    const updateChat = async (getchatText) => {\n        var Data = {\n            chatname: getchatText,\n            status: 'no'\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat/close_chat.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n            const json = await response.json()\n            if (json[0].Message == 'Complete') {\n                getUser()\n            }\n            // alert(json[0].Message)\n        } catch (error) {\n            alert(error)\n            console.error(error)\n        }\n    }\n\n    const insertChatLog = async (getchatText, getmenuChat) => {\n        // alert(\"chatName\" + chatName + '  shopCode ' + shopCode + ' menu ' + menuChat)\n        var Data = {\n            shopcode: 'admin',\n            chatname: getchatText,\n            menu: getmenuChat,\n            status: 'unread'\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat/insert_chat_log.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n            const json = await response.json()\n            if (json[0].Message == 'Complete') {\n                //  getUser()\n            }\n            // alert(json[0].Message)\n        } catch (error) {\n            //   alert(error)\n            console.error(error)\n        }\n    }\n\n    useEffect(() => {\n       // selectChatLog()\n        const countTimer = setInterval(() => {\n            manageTimer();\n        }, 1000);\n        // and clear this timer when the component is unmounted\n        return function cleanup() {\n            clearInterval(countTimer);\n        };\n    });\n\n    const manageTimer = async () => {\n\n        if (count == 0) {\n           \n        } else if (count == 1) {\n            selectChatLog()\n        } else {\n            setCount(count - 1)\n        }\n    }\n\n    const selectChatLog = async () => {\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat/select_user_and_log.php')\n            const json = await response.json()\n            setFilteredDataSource(json);\n            setMasterDataSource(json);\n            selectChatLogL()\n        } catch (error) {\n            console.error(error)\n            setCount(3)\n        }\n    }\n\n    const selectChatLogL = async () => {        \n        var Data = {\n            shopcode: shopCodeText,\n            chatname: chatText,\n            status: 'read'\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat/update_chat_log_web.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n            const json = await response.json()\n\n            const cityRef = db.collection(chatText).where(\"user._id\", \"==\", shopCodeText)\n                .get()\n                .then(function (querySnapshot) {\n                    querySnapshot.forEach(function (doc) {\n                        doc.ref.update({ received: true })\n                    });\n                })\n\n            setCount(3)\n        } catch (error) {\n            setCount(3)\n            console.error(error)\n        }\n    }\n\n    const submit = async (getchatText) => {\n        const res = window.confirm(\"ยืนยันปิดการสนทนา \" + titleText);\n\n        if (res) {\n            // show your message success\n            updateChat(getchatText)\n        }\n    }\n\n\n    const onSend = useCallback((messages = [], getchatText, getmenuChat) => {\n        //alert(\"chatName\" + chatName + '  shopCode ' + shopCode + ' menu ' + menuChat)\n        //  alert(\"chatText \" + chatText)\n        insertChatLog(getchatText, getmenuChat)\n     //   setMessages(previousMessages => GiftedChat.append(previousMessages, messages))\n        const {\n            _id,\n            createdAt,\n            text,\n            user,\n            received\n        } = messages[0]\n        db.collection(getchatText).add({\n            _id,\n            createdAt,\n            text,\n            user,\n            received: false            \n        })\n\n    }, [])\n\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            headerRight: () => (\n                <TouchableOpacity style={{\n                    marginRight: 30\n                }}\n                    onPress={signOut}\n                >\n                    <AntDesign name=\"logout\" size={24}\n                        color=\"black\" />\n                </TouchableOpacity>\n            )\n        })\n\n    }, [])\n    const signOut = () => {\n        auth.signOut().then(() => {\n            navigation.replace('Login')\n        }).catch((error) => {\n            // An error happened.\n        });\n    }\n\n    const updateChatLog = async (shopname, shopcode, chatname, menu) => {\n        //  alert(shopcode + \" \" + chatname)\n        var Data = {\n            shopcode: shopcode,\n            chatname: chatname,\n            status: 'read'\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat/update_chat_log_web.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n            const json = await response.json()\n        } catch (error) {\n            //   alert(error)\n            console.error(error)\n        }\n        onPressTitle(shopname, shopcode, chatname, menu)\n\n    }\n\n    const onPressTitle = (shopname, shopcode, chatname, menu) => {\n        chatName = chatname;\n        shopCode = shopcode;\n        menuChat = menu;\n        let getTitle = shopcode + ' (' + shopname + ')'\n\n        setTitleText(getTitle);\n        setChatText(chatName);\n        setShopCodeText(shopCode);\n        setShopNameText(shopname);\n        setMenuText(menuChat);\n\n        readUser(shopcode, chatName)\n    };\n\n    const readUser = async (getshopcode, getchatName) => {\n   //   const cityRef = db.collection(getchatName).doc('pvTqBlnbd9ESJB6sx0w9');\n     //   const res = await cityRef.update({ received: true });\n\n       // const cityRef = db.collection(getchatName).where(\"received\", \"==\", false)\n        const cityRef = db.collection(getchatName).where(\"user._id\", \"==\", getshopcode)\n            .get()\n            .then(function (querySnapshot) {\n                querySnapshot.forEach(function (doc) {\n                    doc.ref.update({ received: true })\n                });\n            })\n\n        const unsubscribe = db.collection(getchatName).orderBy('createdAt', 'desc').onSnapshot(snapshot => setMessages(\n        snapshot.docs.map(doc => ({\n                _id: doc.data()._id,\n                createdAt: doc.data().createdAt.toDate(),\n                text: doc.data().text,\n                user: doc.data().user,\n                image: doc.data().image,\n                video: doc.data().video,\n                received: doc.data().received\n            }))\n        ))\n        return () => unsubscribe;\n    \n    }\n\n    const FlatListItemSeparator = () => {\n        return (\n            //Item Separator\n            <View style={styles.listItemSeparatorStyle} />\n        );\n    };\n    const [images, setImages] = useState([]);\n    const [videos, setVideos] = useState([]);\n\n    const [urls, setUrls] = useState([]);\n    const [progress, setProgress] = useState(0);\n\n    const handleChange = (e) => {\n        setImages([]);\n        setUrls([]);\n        for (let i = 0; i < e.target.files.length; i++) {\n            const newImage = e.target.files[i];\n            newImage[\"id\"] = Math.random();\n\n            setImages((prevState) => [...prevState, newImage]);\n        }\n    };\n\n    const handleUpload = async () => {\n        var date = new Date().getDate(); //Current Date\n        var month = new Date().getMonth() + 1; //Current Month\n        var year = new Date().getFullYear(); //Current Year\n        var hours = new Date().getHours(); //Current Hours\n        var min = new Date().getMinutes(); //Current Minutes\n        var sec = new Date().getSeconds(); //Current Seconds\n\n        const filename = 'admin_' + year + month + date + hours + min + sec\n\n        const promises = [];\n        images.map((image) => {\n            const uploadTask = storage.ref(`images/${filename}`).put(image);\n\n            promises.push(uploadTask);\n            uploadTask.on(\n                \"state_changed\",\n                (snapshot) => {\n                    const progress = Math.round(\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                    );\n                    setProgress(progress);\n                },\n                (error) => {\n                    console.log(error);\n                },\n                async () => {\n                    await storage\n                        .ref(\"images\")\n                        .child(filename)\n                        .getDownloadURL()\n                        .then((urls) => {\n                            uploadImagePicked(urls)\n                            setUrls((prevState) => [...prevState, urls]);\n                        });\n                }\n            );\n          //  uploadImagePicked()\n        });\n\n/*\n        Promise.all(promises)\n            .then(() => )\n            .catch((err) => console.log(err));\n          */  \n    };\n\n    const uploadImagePicked = (geturls) => {\n        const randomid = Math.random().toString(36).substring(7)\n        let msg = {\n            _id: randomid,\n            text: '',\n            createdAt: new Date(),\n            user: {\n                _id: 'Admin',\n                name: 'Admin',\n                avatar: 'https://static-s.aa-cdn.net/img/gp/20600014266053/JVWGO91AFGOSfDoqO3V_YlUiWnCoiyob0aPkVOss0qASb26aRbXvWiiNK12ZFLxfsSw=s300?v=1'\n            },\n            image: geturls\n        }\n\n        const {\n            _id,\n            createdAt,\n            text,\n            user,\n            image,\n            received\n        } = [msg][0]\n        db.collection(chatText).add({\n            _id,\n            createdAt,\n            text,\n            user,\n            image,\n            received: false\n        })\n        insertChatLog(chatText, menuText)\n\n    }\n\n\n    const handleChangevdo = (e) => {\n        setVideos([]);\n        setUrls([]);\n        for (let i = 0; i < e.target.files.length; i++) {\n            const newImage = e.target.files[i];\n            newImage[\"id\"] = Math.random();\n\n            setVideos((prevState) => [...prevState, newImage]);\n        }\n    };\n\n    const handleUploadvdo = async () => {\n        const promises = [];\n        var date = new Date().getDate(); //Current Date\n        var month = new Date().getMonth() + 1; //Current Month\n        var year = new Date().getFullYear(); //Current Year\n        var hours = new Date().getHours(); //Current Hours\n        var min = new Date().getMinutes(); //Current Minutes\n        var sec = new Date().getSeconds(); //Current Seconds\n\n        const filename = 'admin_' + year + month + date + hours + min + sec\n\n        videos.map((image) => {\n            const uploadTask = storage.ref(`videos/${filename}`).put(image);\n\n            promises.push(uploadTask);\n            uploadTask.on(\n                \"state_changed\",\n                (snapshot) => {\n                    const progress = Math.round(\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                    );\n                    setProgress(progress);\n                },\n                (error) => {\n                    console.log(error);\n                },\n                async () => {\n                    await storage\n                        .ref(\"videos\")\n                        .child(filename)\n                        .getDownloadURL()\n                        .then((urls) => {\n                            uploadVideosPicked(urls)\n                            setUrls((prevState) => [...prevState, urls]);\n                        });\n                }\n            );\n            //  uploadImagePicked()\n        });\n\n        /*\n                Promise.all(promises)\n                    .then(() => )\n                    .catch((err) => console.log(err));\n                  */\n    };\n\n    const renderMessageVideo = (props) => {\n        const { currentMessage } = props;\n        return (\n            <View style={{ position: 'relative', height: 150, width: 250 }}>\n                <Video\n                    resizeMode=\"cover\"\n                    height={150}\n                    width={250}\n                    useNativeControls\n                    shouldPlay={false}\n                    source={{ uri: currentMessage.video }}\n                />\n            </View>\n        );\n    };\n\n    const uploadVideosPicked = (geturls) => {\n        const randomid = Math.random().toString(36).substring(7)\n        let msg = {\n            _id: randomid,\n            text: '',\n            createdAt: new Date(),\n            user: {\n                _id: 'Admin',\n                name: 'Admin',\n                avatar: 'https://static-s.aa-cdn.net/img/gp/20600014266053/JVWGO91AFGOSfDoqO3V_YlUiWnCoiyob0aPkVOss0qASb26aRbXvWiiNK12ZFLxfsSw=s300?v=1'\n            },\n            video: geturls\n        }\n\n        const {\n            _id,\n            createdAt,\n            text,\n            user,\n            video,\n            received\n        } = [msg][0]\n        db.collection(chatText).add({\n            _id,\n            createdAt,\n            text,\n            user,\n            video,\n            received: false\n        })\n        insertChatLog(chatText, menuText)\n\n    }\n\n    const renderBubble = (props) => {\n        return (\n            <Bubble\n                {...props}\n                tickStyle={{\n                    color: props.currentMessage.received ? '#00FF00' : '#454545'\n                }}\n                timeTextStyle={{\n                    right: {\n                        color: 'rgb(255,255,255)'\n                    },\n                    left: {\n                        color: 'rgb(0,0,0)'\n                    },\n                }}\n                textStyle={{\n                    right: {\n                        color: 'rgb(255,255,255)'\n                    },\n                    left: {\n                        color: 'rgb(0,0,0)'\n                    },\n\n                }}\n                wrapperStyle={{\n                    right:\n                    {\n                        backgroundColor: 'rgba(0,102,204,1)',\n                        borderRadius: 15\n                    },\n                    left:\n                    {\n                        backgroundColor: 'rgb(255,255,255)',\n                        borderRadius: 15\n                    }\n                }}\n                quickReplyStyle={{\n                    color: 'rgba(0,102,204,1)',\n                    borderWidth: 2,\n                    borderRadius: 30,\n                    backgroundColor: 'rgb(255,255,255)'\n                }}\n\n            />\n        );\n    };\n\n    return (\n\n        <View style={[styles.container, {\n            flexDirection: \"row\"\n        }]}>\n            <View style={{ flex: 1, backgroundColor: \"write\" }, styles.container}>\n                <SearchBar\n                    lightTheme\n                    round\n                    searchIcon={{ size: 24 }}\n                    onChangeText={(text) => searchFilterFunction(text)}\n                    onClear={(text) => searchFilterFunction('')}\n                    placeholder=\"ค้นหาจากรหัสร้านค้า...\"\n                    value={search}\n                />\n\n                <SectionList\n                    ItemSeparatorComponent={FlatListItemSeparator}\n                    sections={[\n                        { data: filteredDataSource },\n                    ]}\n                    renderItem={({ item }) => (\n                        // Single Comes here which will be repeatative for the FlatListItems\n                        <View style={{ flex: 1, flexDirection: 'row', marginLeft: 20 }}>\n                            <Image\n                                source={{ uri: item.displayimage }}\n                                style={styles.Img}\n                            />\n                            <Text\n                                style={styles.sectionListItemStyle}\n                                //Item Separator View\n                                onPress={() => updateChatLog(item.shopname, item.shopcode, item.chatname, item.menu)}>\n\n                                {item.shopcode} ({item.shopname})\n                            </Text>\n                            <Text\n                                style={{\n                                    textAlign: 'center',\n                                    backgroundColor: item.chatcolor,\n                                    fontSize: 10,\n                                    padding: 5,\n                                    marginTop: 5,\n                                    color: '#fff',\n                                    height: 20,\n                                    width: 20,\n                                    borderRadius: 10\n                                }}>\n                                {item.chatcount}\n                            </Text>\n                        </View>\n                    )}\n                    keyExtractor={(item, index) => index}\n                />\n            </View>\n            <View style={{ flex: 2, backgroundColor: \"lightgray\" }} >\n                <View\n                    style={{\n                        flexDirection: \"row\",\n                        height: 40,\n                        padding: 0\n                    }}\n                >\n                    <View style={{ backgroundColor: \"#0089FC\", flex: 3 }}>\n                        <Text style={styles.titleText}>{titleText}</Text>\n                    </View>\n                    <View style={{ backgroundColor: \"#0089FC\", flex: 0.5 }}>\n                        <Button title=\"ปิดการสนทนา\" style={styles.button}\n                            color={\"blue\"}\n                            onPress={() => submit(chatText)}\n                        />\n                    </View>\n                </View>\n                <GiftedChat\n                    messages={messages}\n                    showAvatarForEveryMessage={true}\n                    renderBubble={renderBubble}\n                    renderMessageVideo={renderMessageVideo}\n                    onSend={messages => onSend(messages, chatText, menuChat)}\n                    user={{\n                        _id: 'Admin',\n                        name: 'Admin',\n                        avatar: 'https://static-s.aa-cdn.net/img/gp/20600014266053/JVWGO91AFGOSfDoqO3V_YlUiWnCoiyob0aPkVOss0qASb26aRbXvWiiNK12ZFLxfsSw=s300?v=1'\n                    }}\n                />\n                <View\n                    style={{\n                        flexDirection: \"row\",\n                        height: 25,\n                        padding: 0\n                    }}\n                >\n                    <View style={{ backgroundColor: \"lightgray\", flex: 2 }}>\n                        <div>\n                            <input type=\"file\" id=\"upload-file\" hidden onChange={handleChange} accept=\"image/*\" />\n                            <label for=\"upload-file\">เลือกรูปภาพ</label>\n                        </div>\n                    </View>\n                    <View style={{ backgroundColor: \"lightgray\", flex: 0.5 }}>\n                        <div>\n                            <button onClick={handleUpload}>ส่งรูป</button>\n                        </div>\n                       \n                    </View>\n                    <View style={{ backgroundColor: \"lightgray\", flex: 2 }}>\n                        <div> \n                            <input type=\"file\" id=\"upload-file-video\" hidden onChange={handleChangevdo} accept=\"video/*\" />\n                            <label for=\"upload-file-video\">เลือกวิดีโอ</label>\n                            </div>\n                       \n                    </View>\n                    <View style={{ backgroundColor: \"lightgray\", flex: 0.5 }}>\n                        <div>\n                            <button onClick={handleUploadvdo}>ส่งวิดีโอ</button>\n                        </div>\n                    </View>\n                </View>\n                                \n            </View>\n        </View >\n    )\n}\nexport default ChatScreen3\n\nconst styles = StyleSheet.create({\n    Img: {\n        height: 50,\n        width: 50,\n        borderRadius: 25\n    },\n    namechats: {\n        /// flex: 1,\n        // justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#0089FC',\n        height: 40\n    },\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        backgroundColor: 'white',\n    },\n    titleText: {\n        textAlign: 'center',\n        backgroundColor: '#0089FC',\n        fontSize: 20,\n        padding: 5,\n        color: '#fff',\n        height: 40\n\n    },\n    notiText: {\n        textAlign: 'center',\n        backgroundColor: 'red',\n        fontSize: 10,\n        padding: 5,\n        marginTop: 5,\n        marginRight: 5,\n        color: '#fff',\n        height: 20,\n        width: 20,\n        borderRadius: 10\n    },\n    sectionListItemStyle: {\n        fontSize: 15,\n        padding: 15,\n        color: '#000',\n        backgroundColor: 'white',\n    },\n    listItemSeparatorStyle: {\n        height: 0.5,\n        width: '100%',\n        backgroundColor: '#C8C8C8',\n    },\n    button: {\n        justifyContent: 'center',\n        width: 250,\n        height: 40,\n        borderRadius: 10\n    },\n\n});\n","import React, { useEffect, useState } from 'react'\nimport { View, StyleSheet, Image, Button } from 'react-native'\nimport { Input } from 'react-native-elements';\n//import { auth } from '../firebase';\n\nimport Icon from \"react-native-vector-icons/Ionicons\";\n\nconst MenuScreen = ({ navigation }) => {\n\n    return (\n\n        <View style={style.container}>\n            <Image\n                source={require(\"../assets/Pepsi-Logo.png\")}\n                resizeMode=\"contain\"\n                style={style.logo1}\n            ></Image>\n\n            <View style={[style.containerrow, {\n\n                flexDirection: \"row\"\n            }]}>\n\n\n                <Button title=\"Live Chat\" style={style.button}\n                    color={\"#EE0000\"}\n                    onPress={() => navigation.navigate('Chat')}\n                />\n\n                &nbsp; &nbsp; &nbsp; &nbsp;\n\n\n                <Button title=\"History\" style={style.button}\n                    color={\"#EE0000\"} width='250' height='100'\n                    onPress={() => navigation.navigate('History')}\n                />\n            </View>\n        </View>\n    )\n}\nexport default MenuScreen\nconst style = StyleSheet.create({\n    button: {\n        width: 250,\n        height: 100,\n        marginTop: 20\n    },\n    container: {\n        flex: 1,\n        backgroundColor: \"rgba(0,102,204,1)\",\n        alignItems: \"center\",\n        padding: 10\n    },\n    containerrow: {\n        //  flex: 1,\n        backgroundColor: \"rgba(0,102,204,1)\",\n        alignItems: \"center\",\n        padding: 10\n    },\n    logo1: {\n        height: 150,\n        width: 220\n    },\n\n\n})","import React from 'react'\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\n\nexport const ExportToExcel = ({ apiData, fileName }) => {\n    const fileType =\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n    const fileExtension = \".xlsx\";\n\n    const exportToCSV = (apiData, fileName) => {\n        const ws = XLSX.utils.json_to_sheet(apiData);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension);\n    };\n\n    return (\n        <button onClick={(e) => exportToCSV(apiData, fileName)} style={{\n            backgroundColor: \"#145A32\", height: 40, borderRadius: 10, color: \"#ffffff\"\n        }}>Download Excel</button>\n    );\n};","import React, { useEffect, useLayoutEffect, useState, useCallback } from 'react'\nimport { SectionList, StyleSheet, Text, View, Image, Alert, Modal, Pressable} from 'react-native';\n\nimport { auth, db } from '../firebase';\nimport { AntDesign } from '@expo/vector-icons';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { Avatar } from 'react-native-elements/dist/avatar/Avatar';\nimport { GiftedChat } from 'react-native-gifted-chat';\nimport { FlatList } from 'react-native';\nimport { SearchBar } from 'react-native-elements';\nimport { DataTable, IconButton } from 'react-native-paper';\nimport { Video, Audio } from 'expo-av';\n\nimport axios from 'axios'\nimport { ExportToExcel } from './ExportToExcel'\n\nconst HistoryScreen = ({ navigation }) => {\n    const [modalVisible, setModalVisible] = useState(false);\n    const [messages, setMessages] = useState([]);\n\n    const [titleText, setTitleText] = useState(\"\")\n    const [shopDisplayImage, setShopDisplayImage] = useState(\"\")\n    const [shopCodeText, setShopCodeText] = useState(\"\")\n    const [shopNameText, setShopNameText] = useState(\"\")\n    const [shopTellText, setShopTellText] = useState(\"\")\n    const [shopAddressText, setShopAddressText] = useState(\"\")\n    const [shopChatNameText, setShopChatNameText] = useState(\"\")\n    const [shopMenu, setShopMenu] = useState(\"\")\n\n    var chatName = ''\n\n    const [search, setSearch] = useState('');\n    const [filteredDataSource1, setFilteredDataSource1] = useState([]);\n    const [masterDataSource1, setMasterDataSource1] = useState([]);\n    const [filteredDataSource2, setFilteredDataSource2] = useState([]);\n    const [masterDataSource2, setMasterDataSource2] = useState([]);\n    const [filteredDataSource3, setFilteredDataSource3] = useState([]);\n    const [masterDataSource3, setMasterDataSource3] = useState([]);\n    const [filteredDataSource4, setFilteredDataSource4] = useState([]);\n    const [masterDataSource4, setMasterDataSource4] = useState([]);\n    const [filteredDataSource5, setFilteredDataSource5] = useState([]);\n    const [masterDataSource5, setMasterDataSource5] = useState([]);\n\n    const [filteredDataSource6, setFilteredDataSource6] = useState([]);\n    const [masterDataSource6, setMasterDataSource6] = useState([]);\n\n    const [data, setData] = React.useState([])\n    const fileName = \"Export_Chat_Report\"; // here enter filename for your excel file\n\n\n    React.useEffect(() => {\n\n        const fetchData = () => {\n            axios.get('https://school.treesbot.com/pepsichat/export_chat_all.php').then(r => setData(r.data))\n        }\n        fetchData()\n\n    }, [])\n\n\n    const getUser = async (menu) => {\n        var Data = {\n            menu: menu,\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat/select_user_menu.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n            const json = await response.json()\n            if (menu == 'group1') {\n                setFilteredDataSource1(json);\n                setMasterDataSource1(json);\n                onPressTitle(json[0].displayimage, json[0].shopname, json[0].shopcode, json[0].tell, json[0].address, json[0].chatname, json[0].menu)\n                getTable(json[0].shopcode)\n            } else if (menu == 'group2') {\n                setFilteredDataSource2(json);\n                setMasterDataSource2(json);\n            } else if (menu == 'group3') {\n                setFilteredDataSource3(json);\n                setMasterDataSource3(json);\n            } else if (menu == 'group4') {\n                setFilteredDataSource4(json);\n                setMasterDataSource4(json);\n            } else if (menu == 'group5') {\n                setFilteredDataSource5(json);\n                setMasterDataSource5(json);\n            } else if (menu == '') {\n                setFilteredDataSource6(json);\n                setMasterDataSource6(json);\n            }\n        } catch (error) {\n            console.error(error)\n        } \n    }\n\n    useEffect(() => {\n        getUser('group1')\n        getUser('group2')\n        getUser('group3')\n        getUser('group4')\n        getUser('group5')\n        getUser('')\n\n    }, [])\n\n    const searchFilterFunction = (text) => {\n        // Check if searched text is not blank\n        if (text) {\n            // Inserted text is not blank\n            // Filter the masterDataSource\n            // Update FilteredDataSource\n            const newData1 = masterDataSource1.filter(function (item) {\n                const itemData = item.shopcode\n                    ? item.shopcode.toUpperCase()\n                    : ''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData) > -1;\n            });\n            const newData2 = masterDataSource2.filter(function (item) {\n                const itemData = item.shopcode\n                    ? item.shopcode.toUpperCase()\n                    : ''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData) > -1;\n            });\n            const newData3 = masterDataSource3.filter(function (item) {\n                const itemData = item.shopcode\n                    ? item.shopcode.toUpperCase()\n                    : ''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData) > -1;\n            });\n            const newData4 = masterDataSource4.filter(function (item) {\n                const itemData = item.shopcode\n                    ? item.shopcode.toUpperCase()\n                    : ''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData) > -1;\n            });\n            const newData5 = masterDataSource5.filter(function (item) {\n                const itemData = item.shopcode\n                    ? item.shopcode.toUpperCase()\n                    : ''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData) > -1;\n            });\n            const newData6 = masterDataSource6.filter(function (item) {\n                const itemData = item.shopcode\n                    ? item.shopcode.toUpperCase()\n                    : ''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData) > -1;\n            });\n            setFilteredDataSource1(newData1);\n            setFilteredDataSource2(newData2);\n            setFilteredDataSource3(newData3);\n            setFilteredDataSource4(newData4);\n            setFilteredDataSource5(newData5);\n            setFilteredDataSource6(newData6)\n\n            setSearch(text);\n        } else {\n            // Inserted text is blank\n            // Update FilteredDataSource with masterDataSource\n            setFilteredDataSource1(masterDataSource1);\n            setFilteredDataSource2(masterDataSource2);\n            setFilteredDataSource3(masterDataSource3);\n            setFilteredDataSource4(masterDataSource4);\n            setFilteredDataSource5(masterDataSource5);\n            setFilteredDataSource6(masterDataSource6)\n\n            setSearch(text);\n        }\n    };\n\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            headerRight: () => (\n                <TouchableOpacity style={{\n                    marginRight: 30\n                }}\n                    onPress={signOut}\n                >\n                    <AntDesign name=\"logout\" size={24}\n                        color=\"black\" />\n                </TouchableOpacity>\n            )\n        })\n\n    }, [])\n    const signOut = () => {\n        auth.signOut().then(() => {\n            navigation.replace('Login')\n        }).catch((error) => {\n            // An error happened.\n        });\n    }\n\n    const onPressChat = (chatname) => {\n        chatName = chatname\n        setModalVisible(true)\n        readUser()\n    };\n\n    async function readUser() {\n        const unsubscribe = db.collection(chatName).orderBy('createdAt', 'desc').onSnapshot(snapshot => setMessages(\n            snapshot.docs.map(doc => ({\n                _id: doc.data()._id,\n                createdAt: doc.data().createdAt.toDate(),\n                text: doc.data().text,\n                user: doc.data().user,\n                image: doc.data().image,\n                video: doc.data().video\n                \n            }))\n        ))\n        return () => unsubscribe;\n    }\n\n    const FlatListItemSeparator = () => {\n        return (\n            //Item Separator\n            <View style={styles.listItemSeparatorStyle} />\n        );\n    };\n\n    const onPressTitle = (displayimage, username, shopcode, tell, address, chatname, menu) => {\n        chatName = chatname\n        let getTitle = shopcode + ' (' + username + ')'\n\n        setTitleText(getTitle);\n        setShopDisplayImage(displayimage)\n        setShopNameText(username);\n        setShopCodeText(shopcode);\n        setShopTellText(tell);\n        setShopAddressText(address);\n        setShopChatNameText(chatname);\n        setShopMenu(menu);\n\n        getTable(shopcode);\n    };\n\n    const [dataTable, setDataTable] = useState([]);\n\n    const getTable = async (shopcode) => {\n        var Data = {\n            shopcode: shopcode,\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat/select_user_shopcode.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n            const json = await response.json()\n            setDataTable(json);\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    const test2 = (menu) => {\n        var groupname = ''\n        if (menu == 'group1') {\n            groupname = 'แจ้งปัญหาจากกิจกรรมถ่ายรูปตู้แช่'\n        } else if (menu == 'group2') {\n            groupname = 'สอบถาม, ติดตาม หรือแจ้งปัญหาการแลกของรางวัล'\n        } else if (menu == 'group3') {\n            groupname = 'สอบถามหรือแจ้งปัญหาการใช้งานแอพพลิเคชั่นด้านอื่นๆ'\n        } else if (menu == 'group4') {\n            groupname = 'สอบถามรายละเอียดทั่วไป'\n        } else if (menu == 'group5') {\n            groupname = 'แอด LINE เป๊ปซี่แฟนคลับ'\n        } else if (menu == '') {\n            groupname = 'ไม่ได้เลือกหัวข้อสนทนา'\n        }\n        return groupname\n    }\n    const _renderItem = ({ item }) => (\n        <DataTable.Row>\n            <DataTable.Cell style={{ flex: 1 }}>{item.num}</DataTable.Cell>\n            <DataTable.Cell style={{ flex: 2 }}>{item.dateinsert}</DataTable.Cell>\n            <DataTable.Cell style={{ flex: 3 }}>{test2(item.menu)}</DataTable.Cell>\n            <DataTable.Cell style={{ flex: 1 }}><IconButton\n                icon=\"eye\"\n                color={'blue'}\n                size={20}\n                onPress={() => onPressChat(item.chatname)}\n            />\n            </DataTable.Cell>\n\n        </DataTable.Row>\n    );\n\n    const renderMessageVideo = (props) => {\n        const { currentMessage } = props;\n        return (\n            <View style={{ position: 'relative', height: 150, width: 250 }}>\n                <Video\n                    resizeMode=\"cover\"\n                    height={150}\n                    width={250}\n                    useNativeControls\n                    shouldPlay={false}\n                    source={{ uri: currentMessage.video }}\n                    style={styles.video}\n                />\n            </View>\n        );\n    };\n\n    return (\n\n        <View style={[styles.container, {\n            // Try setting `flexDirection` to `\"row\"`.\n            flexDirection: \"row\"\n        }]}>\n            <View style={{ flex: 1, backgroundColor: \"white\" }, styles.container}>\n                <ExportToExcel apiData={data} fileName={fileName} />\n                <SearchBar\n                    lightTheme\n                    round\n                    searchIcon={{ size: 24 }}\n                    onChangeText={(text) => searchFilterFunction(text)}\n                    onClear={(text) => searchFilterFunction('')}\n                    placeholder=\"ค้นหาจากรหัสร้านค้า...\"\n                    value={search}\n                />\n\n                <SectionList\n                    ItemSeparatorComponent={FlatListItemSeparator}\n                    sections={[\n                        { title: 'แจ้งปัญหาจากกิจกรรมถ่ายรูปตู้แช่', data: filteredDataSource1 },\n                        { title: 'สอบถาม, ติดตาม หรือแจ้งปัญหาการแลกของรางวัล', data: filteredDataSource2 },\n                        { title: 'สอบถามหรือแจ้งปัญหาการใช้งานแอพพลิเคชั่นด้านอื่นๆ', data: filteredDataSource3 },\n                        { title: 'สอบถามรายละเอียดทั่วไป', data: filteredDataSource4 },\n                        { title: 'แอด LINE เป๊ปซี่แฟนคลับ', data: filteredDataSource5 },\n                        { title: 'ไม่ได้เลือกหัวข้อสนทนา', data: filteredDataSource6 },\n\n                    ]}\n                    renderSectionHeader={({ section }) => (\n                        <Text style={styles.groupText}> {section.title} </Text>\n                    )}\n                    renderItem={({ item }) => (\n                        // Single Comes here which will be repeatative for the FlatListItems\n                        <View style={{ flex: 1, flexDirection: 'row', marginLeft: 20}}>\n                            <Image\n                                source={{ uri: item.displayimage }}\n                                style={styles.Img}\n                            />\n                            <Text\n                                style={styles.sectionListItemStyle}\n                                //Item Separator View\n                                onPress={() => onPressTitle(item.displayimage, item.shopname, item.shopcode, item.tell, item.address, item.chatname, item.menu)}>\n\n                                {item.shopcode} ({item.shopname})\n                            </Text>\n\n                        </View>\n                    )}\n                    keyExtractor={(item, index) => index}\n                />\n            </View>\n            <View style={{ flex: 2, backgroundColor: \"#0089FC\" }} >\n                <Modal\n                    animationType=\"slide\"\n                    transparent={true}\n                    visible={modalVisible}\n                    onRequestClose={() => {\n                        Alert.alert(\"Modal has been closed.\");\n                        setModalVisible(!modalVisible);\n                    }}\n                >\n                    <View style={styles.centeredView}>\n                        <View style={styles.modalView}>\n                            <GiftedChat\n                                messages={messages}\n                                showAvatarForEveryMessage={true}\n                                renderMessageVideo={renderMessageVideo}\n                                user={{\n                                    _id: 'Admin',\n                                    name: 'Admin',\n                                    avatar: 'https://static-s.aa-cdn.net/img/gp/20600014266053/JVWGO91AFGOSfDoqO3V_YlUiWnCoiyob0aPkVOss0qASb26aRbXvWiiNK12ZFLxfsSw=s300?v=1'\n                                }}\n                                renderInputToolbar={() => { return null }}\n                            />\n                            <Pressable\n                                style={[styles.button, styles.buttonClose]}\n                                onPress={() => setModalVisible(!modalVisible)}\n                            >\n                                <Text style={styles.textStyle}>ปิด</Text>\n                            </Pressable>\n                        </View>\n                    </View>\n                </Modal>\n                <View\n                    style={{\n                        backgroundColor: \"white\",\n                        flexDirection: \"row\",\n                        height: 150,\n                        padding: 0,\n                        borderRadius: 20,\n                        marginTop: 20,\n                        marginLeft: 20,\n                        marginRight: 20\n                    }}\n                >\n                    <View style={{ flex: 1}}>\n                        <Image\n                            source={{ uri: shopDisplayImage }}\n                            style={styles.Img2}\n                        />\n                    </View>\n                    <View style={{ flex: 2 }}>\n                        <Text style={styles.titleText}><b>{titleText}</b></Text>\n                        <Text style={styles.titleText}>รหัสร้านค้า : {shopCodeText}</Text>\n                        <Text style={styles.titleText}>เบอร์โทรติดต่อ : {shopTellText}</Text>\n                        <Text style={styles.titleText}>ที่อยู่ : {shopAddressText}</Text>\n                    </View>\n                </View>\n                <View style={{\n                    backgroundColor: \"white\",\n                    flexDirection: \"row\",\n                    borderRadius: 20,\n                    marginTop: 10,\n                    marginLeft: 20,\n                    marginRight: 20,\n                    marginBottom: 10\n                }}>\n                    <DataTable>\n                        <DataTable.Header>\n                            <DataTable.Title style={{ flex: 1 }}>No</DataTable.Title>\n                            <DataTable.Title style={{ flex: 2 }}>Date</DataTable.Title>\n                            <DataTable.Title style={{ flex: 3 }}>Message</DataTable.Title>\n                            <DataTable.Title style={{ flex: 1 }}>Action</DataTable.Title>\n\n                        </DataTable.Header>\n\n                        <FlatList data={dataTable} renderItem={_renderItem} />\n                    </DataTable>\n                </View>\n            </View>\n        </View >\n      \n    )\n}\nexport default HistoryScreen\n\nconst styles = StyleSheet.create({\n    Img: {\n        height: 50,\n        width: 50,\n        borderRadius: 25\n    },\n    Img2: {\n        marginTop: 25,\n        marginLeft: 50,\n        height: 100,\n        width: 100,\n        borderRadius: 75\n    },\n    namechats: {\n        /// flex: 1,\n        // justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#0089FC',\n        height: 40\n    },\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        backgroundColor: 'white',\n    },\n    container2: {\n        /// flex: 1,\n        // justifyContent: 'center',\n        backgroundColor: 'white',\n        height: 400,\n        width: 600\n    },\n    groupText: {\n        backgroundColor: 'gray',\n        fontSize: 18,\n        padding: 5,\n        color: 'white',\n    },\n    titleText: {\n        fontSize: 16,\n        padding: 5,\n        color: 'black',\n    },\n    sectionListItemStyle: {\n        fontSize: 15,\n        padding: 15,\n        color: '#000',\n        backgroundColor: 'white',\n    },\n    listItemSeparatorStyle: {\n        height: 0.5,\n        width: '100%',\n        backgroundColor: '#C8C8C8',\n    },\n    centeredView: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginTop: 22\n    },\n    modalView: {\n        flex: 1,\n        margin: 20,\n        backgroundColor: \"white\",\n        borderRadius: 20,\n        width: 500,\n        height: 500,\n        padding: 35,\n        alignItems: \"center\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 4,\n        elevation: 5\n    },\n    button: {\n        borderRadius: 20,\n        padding: 10,\n        elevation: 2\n    },\n    buttonOpen: {\n        backgroundColor: \"#F194FF\",\n    },\n    buttonClose: {\n        backgroundColor: \"#2196F3\",\n    },\n    textStyle: {\n        color: \"white\",\n        fontWeight: \"bold\",\n        textAlign: \"center\"\n    },\n    modalText: {\n        marginBottom: 15,\n        textAlign: \"center\"\n    }\n});\n\n","import React, { useLayoutEffect } from 'react'\nimport { SectionList, StyleSheet, Text, View, SafeAreaView, StatusBar, Image } from 'react-native';\nimport { auth, db } from '../firebase';\nimport { AntDesign } from '@expo/vector-icons';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\n\nconst HistoryScreen2 = ({ navigation }) => {\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            headerRight: () => (\n                <TouchableOpacity style={{\n                    marginRight: 30\n                }}\n                    onPress={signOut}\n                >\n                    <AntDesign name=\"logout\" size={24}\n                        color=\"black\" />\n                </TouchableOpacity>\n            )\n        })\n\n    }, [])\n    const signOut = () => {\n        auth.signOut().then(() => {\n            navigation.replace('Login')\n        }).catch((error) => {\n            // An error happened.\n        });\n    }\n  \n    return (\n        <View style={[styles.container, {\n\n            flexDirection: \"row\"\n        }]}>\n            <View style={{ flex: 1, backgroundColor: \"write\" }}>\n                <View style={[{ flexDirection: \"row\" }]}>\n                   \n                    <Image\n                        source={require(\"../assets/history.jpg\")}\n                        resizeMode=\"contain\"\n                        style={styles.img1}\n                    ></Image>\n                </View>\n                <View style={[{ flexDirection: \"row\" }]}>\n                   \n                    <Image\n                        source={require(\"../assets/history1.png\")}\n                        resizeMode=\"contain\"\n                        style={styles.img1}\n                    ></Image>\n                </View>\n                <View style={[{ flexDirection: \"row\" }]}>\n                   \n                    <Image\n                        source={require(\"../assets/history2.png\")}\n                        resizeMode=\"contain\"\n                        style={styles.img1}\n                    ></Image>\n                </View>\n                <View style={[{ flexDirection: \"row\" }]}>\n                   \n                    <Image\n                        source={require(\"../assets/history3.png\")}\n                        resizeMode=\"contain\"\n                        style={styles.img1}\n                    ></Image>\n                </View>\n\n            </View>\n\n            <View style={{ flex: 1, backgroundColor: \"darkblue\" }} >\n\n                <View style={[{ flexDirection: \"row\" }]}>\n                   \n                    <Image\n                        source={require(\"../assets/imagehistory2.png\")}\n                        resizeMode=\"contain\"\n                        style={styles.img2}\n                    ></Image>\n                </View>\n                <View style={styles.namechats}>\n                    <Text style={styles.titleText}>ประวัติการสนทนา</Text>\n                </View>\n                <View style={[{ flexDirection: \"row\" }]}>\n                   \n                    <Image\n                        source={require(\"../assets/chathistory.png\")}\n                        resizeMode=\"contain\"\n                        style={styles.img3}\n                    ></Image>\n                </View>\n\n            </View>\n        </View>\n    )\n}\nexport default HistoryScreen2\n\nconst styles = StyleSheet.create({\n    namechats: {\n        /// flex: 1,\n        // justifyContent: 'center',\n        alignItems: 'center',\n        height: 40\n    },\n    titleText: {\n        fontSize: 18,\n        padding: 5,\n        color: 'white',\n    },\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        backgroundColor: 'white',\n\n    },\n    container2: {\n        /// flex: 1,\n        // justifyContent: 'center',\n        backgroundColor: 'white',\n        height: 400,\n        width: 600\n    },\n    sectionHeaderStyle: {\n        backgroundColor: '#0089FC',\n        fontSize: 20,\n        padding: 5,\n        color: '#fff',\n    },\n    sectionListItemStyle: {\n        fontSize: 15,\n        padding: 15,\n        color: '#000',\n        backgroundColor: '#F5F5F5',\n    },\n    listItemSeparatorStyle: {\n        height: 0.5,\n        width: '100%',\n        backgroundColor: '#C8C8C8',\n    },\n    img1: {\n        height: 100,\n        width: 600\n    },\n    img2: {\n        height: 200,\n        width: 600\n    },\n    img3: {\n        height: 350,\n        width: 600\n    },\n    logo: {\n        height: 30,\n        width: 30,\n    },\n});\n","import React, { useEffect, useLayoutEffect, useState, useCallback } from 'react'\nimport { SectionList, StyleSheet, Text, View, Image, Button } from 'react-native';\nimport { auth, db } from \"../firebase\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\n///import LoginScreen from './screens/LoginScreen';\n\nconst MainMenuScreen = ({ navigation }) => {\n\n    const [count, setCount] = useState(3);\n    const [countNoti, setCountNoti] = useState(0);\n    const [countColorBG, setCountColorBG] = useState('darkblue');\n    const [countColorTXT, setCountColorTXT] = useState('darkblue');\n\n    useEffect(() => {\n        // increment the count by 1\n        const countTimer = setInterval(() => {\n            manageTimer();\n            // every 1000 milliseconds\n        }, 1000);\n        // and clear this timer when the component is unmounted\n        return function cleanup() {\n            clearInterval(countTimer);\n        };\n    });\n\n    const manageTimer = async () => {\n\n        if (count == 0) {\n            // alert('Times Up !\\nTimer  is reset')\n            console.log('Times Up')\n            // clearInterval(timer)\n            // setCount(5)\n        } else if (count == 1) {\n            selectChatLog()\n        } else {\n            setCount(count - 1)\n        }\n    }\n\n    const selectChatLog = async () => {\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat/select_chat_log_noti_admin.php')\n            const json = await response.json()\n            setCountNoti(json[0].chatcount);\n            setCountColorBG(json[0].chatcolorbg);\n            setCountColorTXT(json[0].chatcolortxt);\n            setCount(3)\n            //  onPressTitle(json[0].shopname, json[0].shopcode, json[0].chatname, json[0].menu)\n        } catch (error) {\n            console.error(error)\n            setCount(3)\n        }\n\n    }\n\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            headerRight: () => (\n                <TouchableOpacity\n                    style={{\n                        marginRight: 30,\n                    }}\n                    onPress={signOut}\n                >\n                    <AntDesign name=\"logout\" size={24} color=\"black\" />\n                </TouchableOpacity>\n            ),\n        });\n    }, []);\n    const signOut = () => {\n        auth\n            .signOut()\n            .then(() => {\n                navigation.replace(\"Login\");\n            })\n            .catch((error) => {\n                // An error happened.\n            });\n    };\n    return (\n        <View\n            style={[\n                styles.container,\n                {\n                    flexDirection: \"row\",\n                },\n            ]}\n        >\n            <View style={{ flex: 1, backgroundColor: \"darkblue\" }}>\n                    <View\n                        style={[\n                            {\n                                flexDirection: \"row\",\n                            },\n                        ]}\n                    >\n                        <View>\n                            <Image\n                                source={require(\"../assets/Pepsi-Logo.png\")}\n                                resizeMode=\"contain\"\n                                style={styles.logo1}\n                            ></Image>\n                        </View>\n                        <View>\n                            <Text style={styles.titleText}>\n                                \n                                {\"Admin\"}\n                            </Text>\n                        </View>\n                    </View>\n                    \n                <View>\n                    <Text style={styles.titleText}>\n                        {\"Welcome\"}\n                    </Text>\n                    <Text style={styles.titleText}>\n                        {\"Mission/Quest\"}\n                    </Text>\n                    <Text style={styles.titleText}>\n                        {\"What's News\"}\n                    </Text>\n                    <Text style={styles.titleText}>\n                        {\"Check-In\"}\n                    </Text>\n                    <View style={{ flex: 1, flexDirection: 'row' }}>\n                        <Text style={styles.titleText} onPress={() => navigation.navigate('Menu')}>\n                            {\"Live Chat\"}\n                        </Text>\n                        <Text\n                            style={{\n                                marginLeft: 20,\n                                textAlign: 'center',\n                                backgroundColor: countColorBG,\n                                fontSize: 10,\n                                padding: 5,\n                                marginTop: 5,\n                                color: countColorTXT,\n                                height: 20,\n                                width: 20,\n                                borderRadius: 10\n                            }}>\n                            {countNoti}\n                        </Text>\n                    </View>\n\n                    <Text style={styles.titleText}>\n                        {\"Score Results\"}\n                    </Text>\n                    <Text style={styles.titleText}>\n                        {\"Rewards & Redreem\"}\n                    </Text>\n                    <Text style={styles.titleText}>\n                        {\"Report\"}\n                    </Text>\n                    <Text style={styles.titleText}>\n                        {\"Setting\"}\n                    </Text>\n                    <Text style={styles.titleText}>\n                        {\"Logout\"}\n                    </Text></View>\n                    \n            </View>\n\n            <View style={{ flex: 3, backgroundColor: \"write\" }}>\n\n\n                <View >\n                    \n                    <Image\n                        source={require(\"../assets/checkin.jpg\")}\n                        resizeMode=\"contain\"\n                        style={styles.img2}\n                    ></Image>\n                </View>\n            </View>\n        </View>\n    );\n};\nexport default MainMenuScreen;\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: \"center\",\n        backgroundColor: \"white\",\n    },\n    sectionHeaderStyle: {\n        backgroundColor: \"#0089FC\",\n        fontSize: 20,\n        padding: 5,\n        color: \"#fff\",\n    },\n    sectionListItemStyle: {\n        fontSize: 15,\n        padding: 15,\n        color: \"#000\",\n        backgroundColor: \"#F5F5F5\",\n    },\n    listItemSeparatorStyle: {\n        height: 0.5,\n        width: \"100%\",\n        backgroundColor: \"#C8C8C8\",\n    },\n    img1: {\n        height: 350,\n        width: 700,\n    },\n    img2: {\n        height: 300,\n        width: 900,\n        justifyContent: \"center\",\n    },\n\n    titleText: {\n        fontSize: 20,\n        color: \"#fff\",\n        //fontWeight: \"bold\",\n        justifyContent: \"center\",\n    },\n    containerText: {\n        flex: 1,\n        justifyContent: \"center\",\n    },\n    logo1: {\n        height: 70,\n        width: 70,\n    },\n});","import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ChatScreen3 from './screens/ChatScreen3';\nimport MenuScreen from './screens/MenuScreen';\nimport HistoryScreen from './screens/HistoryScreen';\nimport HistoryScreen2 from './screens/HistoryScreen2';\nimport MainMenuScreen from './screens/MainMenuScreen';\nimport TeatList from './screens/TeatList';\n\nconst Stack = createStackNavigator();\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator screenOptions={{ headerTitleAlign: 'center' }}>\n        <Stack.Screen name='Login' component={LoginScreen} />\n        <Stack.Screen name='Main' component={MainMenuScreen} />\n        <Stack.Screen name='Register' component={RegisterScreen} />\n        <Stack.Screen name='Menu' component={MenuScreen} />\n        <Stack.Screen name='Chat' component={ChatScreen3} />\n        <Stack.Screen name='History' component={HistoryScreen} />\n        <Stack.Screen name='History2' component={HistoryScreen2} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n","import React, { useEffect, useLayoutEffect, useState, useCallback } from 'react'\nimport { Alert, Modal, StyleSheet, Text, Pressable, View } from \"react-native\";\nimport { auth, db } from '../firebase';\nimport { AntDesign } from '@expo/vector-icons';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { GiftedChat } from 'react-native-gifted-chat';\n\nconst TeatList = ({ navigation }) => {\n    const [modalVisible, setModalVisible] = useState(false);\n    const [messages, setMessages] = useState([]);\n\n    async function readUser() {\n        const unsubscribe = db.collection('9TESTDEMO1').orderBy('createdAt', 'desc').onSnapshot(snapshot => setMessages(\n            snapshot.docs.map(doc => ({\n                _id: doc.data()._id,\n                createdAt: doc.data().createdAt.toDate(),\n                text: doc.data().text,\n                user: doc.data().user\n            }))\n        ))\n        return () => unsubscribe;\n    }\n\n    useEffect(() => {\n        readUser()\n    }, [])\n\n    return (\n        <View style={styles.centeredView}>\n            <Modal\n                animationType=\"slide\"\n                transparent={true}\n                visible={modalVisible}\n                onRequestClose={() => {\n                    Alert.alert(\"Modal has been closed.\");\n                    setModalVisible(!modalVisible);\n                }}\n            >\n                <View style={styles.centeredView}>\n                    <View style={styles.modalView}>\n                        <Text style={styles.modalText}>Hello World!</Text>\n                        <GiftedChat\n                            messages={messages}\n                            showAvatarForEveryMessage={true}\n                            user={{\n                                _id: 'Admin',\n                                name: 'Admin',\n                                avatar: 'https://static-s.aa-cdn.net/img/gp/20600014266053/JVWGO91AFGOSfDoqO3V_YlUiWnCoiyob0aPkVOss0qASb26aRbXvWiiNK12ZFLxfsSw=s300?v=1'\n                            }}\n                            renderInputToolbar={() => { return null }}\n                        />\n                        <Pressable\n                            style={[styles.button, styles.buttonClose]}\n                            onPress={() => setModalVisible(!modalVisible)}\n                        >\n                            <Text style={styles.textStyle}>Hide Modal</Text>\n                        </Pressable>\n                    </View>\n                </View>\n            </Modal>\n            <Pressable\n                style={[styles.button, styles.buttonOpen]}\n                onPress={() => setModalVisible(true)}\n            >\n                <Text style={styles.textStyle}>Show Modal</Text>\n            </Pressable>\n       </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    centeredView: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginTop: 22\n    },\n    modalView: {\n        margin: 20,\n        backgroundColor: \"white\",\n        borderRadius: 20,\n        width:500,\n        height:500,\n        padding: 35,\n        alignItems: \"center\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 4,\n        elevation: 5\n    },\n    button: {\n        borderRadius: 20,\n        padding: 10,\n        elevation: 2\n    },\n    buttonOpen: {\n        backgroundColor: \"#F194FF\",\n    },\n    buttonClose: {\n        backgroundColor: \"#2196F3\",\n    },\n    textStyle: {\n        color: \"white\",\n        fontWeight: \"bold\",\n        textAlign: \"center\"\n    },\n    modalText: {\n        marginBottom: 15,\n        textAlign: \"center\"\n    }\n});\n\nexport default TeatList;\n","module.exports = __webpack_public_path__ + \"static/media/history.37ccf4b2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/history1.8fa8d4a6.png\";","module.exports = __webpack_public_path__ + \"static/media/history2.a811613e.png\";","module.exports = __webpack_public_path__ + \"static/media/history3.8efa4ed3.png\";","module.exports = __webpack_public_path__ + \"static/media/imagehistory2.9f80f697.png\";","module.exports = __webpack_public_path__ + \"static/media/chathistory.6bdbf108.png\";","module.exports = __webpack_public_path__ + \"static/media/checkin.d582c69e.jpg\";"],"sourceRoot":""}