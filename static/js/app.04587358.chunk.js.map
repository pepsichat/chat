{"version":3,"sources":["firebase.js","screens/ChatScreen.js","screens/MenuScreen.js","screens/ExportToExcel.js","screens/HistoryScreen.js","App.js","assets/Pepsi-Logo.png"],"names":["db","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","firestore","storage","auth","ChatScreen","navigation","useState","messages","setMessages","titleText","setTitleText","shopCodeText","setShopCodeText","setShopNameText","chatText","setChatText","menuText","setMenuText","count","setCount","shopCode","chatName","menuChat","search","setSearch","filteredDataSource","setFilteredDataSource","masterDataSource","setMasterDataSource","getUser","a","async","fetch","response","json","onPressTitle","shopname","shopcode","chatname","menu","console","error","searchFilterFunction","text","newData","filter","item","itemData","toUpperCase","textData","indexOf","updateChat","getchatText","Data","status","method","body","JSON","stringify","Message","alert","insertChatLog","getmenuChat","useEffect","countTimer","setInterval","manageTimer","clearInterval","selectChatLog","selectChatLogL","collection","where","get","then","querySnapshot","forEach","doc","ref","update","received","onSend","useCallback","_id","createdAt","user","add","readUser","getshopcode","getchatName","unsubscribe","orderBy","onSnapshot","snapshot","docs","map","data","toDate","image","video","images","setImages","videos","setVideos","setUrls","setProgress","uploadImagePicked","geturls","msg","Math","random","toString","substring","Date","name","avatar","uploadVideosPicked","View","style","styles","container","flexDirection","lightTheme","round","searchIcon","size","onChangeText","onClear","placeholder","value","SectionList","ItemSeparatorComponent","listItemSeparatorStyle","sections","renderItem","flex","marginLeft","Image","source","uri","displayimage","Img","Text","sectionListItemStyle","onPress","updateChatLog","textAlign","backgroundColor","chatcolor","fontSize","padding","marginTop","color","height","width","borderRadius","chatcount","keyExtractor","index","Button","title","button","window","confirm","showAvatarForEveryMessage","renderBubble","props","tickStyle","currentMessage","timeTextStyle","right","left","textStyle","wrapperStyle","quickReplyStyle","borderWidth","renderMessageVideo","position","Video","resizeMode","useNativeControls","shouldPlay","type","id","hidden","onChange","e","i","newImage","target","files","prevState","accept","for","onClick","date","getDate","month","getMonth","year","getFullYear","hours","getHours","min","getMinutes","sec","getSeconds","filename","promises","uploadTask","put","push","on","progress","bytesTransferred","totalBytes","log","child","getDownloadURL","urls","StyleSheet","create","namechats","alignItems","justifyContent","notiText","marginRight","MenuScreen","require","logo1","containerrow","navigate","ExportToExcel","apiData","fileName","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","HistoryScreen","modalVisible","setModalVisible","shopDisplayImage","setShopDisplayImage","shopTellText","setShopTellText","shopAddressText","setShopAddressText","setShopChatNameText","setShopMenu","filteredDataSource1","setFilteredDataSource1","masterDataSource1","setMasterDataSource1","filteredDataSource2","setFilteredDataSource2","masterDataSource2","setMasterDataSource2","filteredDataSource3","setFilteredDataSource3","masterDataSource3","setMasterDataSource3","filteredDataSource4","setFilteredDataSource4","masterDataSource4","setMasterDataSource4","filteredDataSource5","setFilteredDataSource5","masterDataSource5","setMasterDataSource5","filteredDataSource6","setFilteredDataSource6","masterDataSource6","setMasterDataSource6","React","setData","axios","r","tell","address","getTable","newData1","newData2","newData3","newData4","newData5","newData6","onPressChat","username","dataTable","setDataTable","test2","groupname","renderSectionHeader","section","groupText","Modal","animationType","transparent","visible","onRequestClose","Alert","centeredView","modalView","renderInputToolbar","Pressable","buttonClose","Img2","marginBottom","DataTable","Header","Title","FlatList","Row","Cell","num","dateinsert","IconButton","icon","container2","margin","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","buttonOpen","fontWeight","modalText","Stack","createStackNavigator","App","NavigationContainer","Navigator","screenOptions","headerTitleAlign","Screen","component","module","exports"],"mappings":"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","file":"static/js/app.04587358.chunk.js","sourcesContent":["import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/storage';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDBCB00CkxHXwiAxqtj369EKv5M5OCgslc\",\n    authDomain: \"pepsi-coolerfan-chat-2d9ab.firebaseapp.com\",\n    databaseURL: \"gs://pepsi-coolerfan-chat-2d9ab.appspot.com\",\n    projectId: \"pepsi-coolerfan-chat-2d9ab\",\n    storageBucket: \"pepsi-coolerfan-chat-2d9ab.appspot.com\",\n    messagingSenderId: \"967346529141\",\n    appId: \"1:967346529141:web:87311021ef0ced75a9e93c\"\n};\nlet app;\n\nif (firebase.apps.length === 0) {\n    app = firebase.initializeApp(firebaseConfig)\n} else {\n    app = firebase.app();\n}\n\nconst db = app.firestore();\nconst auth = firebase.auth();\nconst storage = firebase.storage();\n\nexport { db, auth, storage};\n","import React, { useEffect, useState, useCallback } from 'react'\nimport { SectionList, StyleSheet, Text, View, Image, Button } from 'react-native';\nimport { db, storage } from '../firebase';\nimport { GiftedChat, Bubble } from 'react-native-gifted-chat';\nimport { SearchBar } from 'react-native-elements';\nimport { Video, Audio } from 'expo-av';\n\nconst ChatScreen = ({ navigation }) => {\n    const [messages, setMessages] = useState([]);\n    const [titleText, setTitleText] = useState(\"\");\n    const [shopCodeText, setShopCodeText] = useState(\"\");\n    const [shopNameText, setShopNameText] = useState(\"\");\n    const [chatText, setChatText] = useState(\"\");\n    const [menuText, setMenuText] = useState(\"\");\n\n    const [count, setCount] = useState(3);\n\n    var shopCode = ''\n    var chatName = ''\n    var menuChat = ''\n    const [search, setSearch] = useState('');\n    const [filteredDataSource, setFilteredDataSource] = useState([]);\n    const [masterDataSource, setMasterDataSource] = useState([]);\n\n    const getUser = async () => {\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat/select_user_and_log.php')\n            const json = await response.json()\n            setFilteredDataSource(json);\n            setMasterDataSource(json);\n            onPressTitle(json[0].shopname, json[0].shopcode, json[0].chatname, json[0].menu)\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    const searchFilterFunction = (text) => {\n        // Check if searched text is not blank\n        if (text) {\n            setCount(0)\n            // Inserted text is not blank\n            // Filter the masterDataSource\n            // Update FilteredDataSource\n            const newData = masterDataSource.filter(function (item) {\n                const itemData = item.shopcode\n                    ? item.shopcode.toUpperCase()\n                    : ''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData) > -1;\n            });\n            setFilteredDataSource(newData);\n            setSearch(text);\n        } else {\n            setCount(3)\n            // Inserted text is blank\n            // Update FilteredDataSource with masterDataSource\n            setFilteredDataSource(masterDataSource);\n            setSearch(text);\n        }\n    };\n\n    const updateChat = async (getchatText) => {\n        var Data = {\n            chatname: getchatText,\n            status: 'no'\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat/close_chat.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n            const json = await response.json()\n            if (json[0].Message == 'Complete') {\n                getUser()\n            }\n            // alert(json[0].Message)\n        } catch (error) {\n            alert(error)\n            console.error(error)\n        }\n    }\n\n    const insertChatLog = async (getchatText, getmenuChat) => {\n        // alert(\"chatName\" + chatName + '  shopCode ' + shopCode + ' menu ' + menuChat)\n        var Data = {\n            shopcode: 'admin',\n            chatname: getchatText,\n            menu: getmenuChat,\n            status: 'unread'\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat/insert_chat_log.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n            const json = await response.json()\n            if (json[0].Message == 'Complete') {\n                //  getUser()\n            }\n            // alert(json[0].Message)\n        } catch (error) {\n            //   alert(error)\n            console.error(error)\n        }\n    }\n\n    useEffect(() => {\n       // selectChatLog()\n        const countTimer = setInterval(() => {\n            manageTimer();\n        }, 1000);\n        // and clear this timer when the component is unmounted\n        return function cleanup() {\n            clearInterval(countTimer);\n        };\n    });\n\n    const manageTimer = async () => {\n\n        if (count == 0) {\n           \n        } else if (count == 1) {\n            selectChatLog()\n        } else {\n            setCount(count - 1)\n        }\n    }\n\n    const selectChatLog = async () => {\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat/select_user_and_log.php')\n            const json = await response.json()\n            setFilteredDataSource(json);\n            setMasterDataSource(json);\n            selectChatLogL()\n        } catch (error) {\n            console.error(error)\n            setCount(3)\n        }\n    }\n\n    const selectChatLogL = async () => {        \n        var Data = {\n            shopcode: shopCodeText,\n            chatname: chatText,\n            status: 'read'\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat/update_chat_log_web.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n            const json = await response.json()\n\n            const cityRef = db.collection(chatText).where(\"user._id\", \"==\", shopCodeText)\n                .get()\n                .then(function (querySnapshot) {\n                    querySnapshot.forEach(function (doc) {\n                        doc.ref.update({ received: true })\n                    });\n                })\n\n            setCount(3)\n        } catch (error) {\n            setCount(3)\n            console.error(error)\n        }\n    }\n\n    const submit = async (getchatText) => {\n        const res = window.confirm(\"ยืนยันปิดการสนทนา \" + titleText);\n\n        if (res) {\n            // show your message success\n            updateChat(getchatText)\n        }\n    }\n\n\n    const onSend = useCallback((messages = [], getchatText, getmenuChat) => {\n        //alert(\"chatName\" + chatName + '  shopCode ' + shopCode + ' menu ' + menuChat)\n        //  alert(\"chatText \" + chatText)\n        insertChatLog(getchatText, getmenuChat)\n     //   setMessages(previousMessages => GiftedChat.append(previousMessages, messages))\n        const {\n            _id,\n            createdAt,\n            text,\n            user,\n            received\n        } = messages[0]\n        db.collection(getchatText).add({\n            _id,\n            createdAt,\n            text,\n            user,\n            received: false            \n        })\n\n    }, [])\n\n    const updateChatLog = async (shopname, shopcode, chatname, menu) => {\n        //  alert(shopcode + \" \" + chatname)\n        var Data = {\n            shopcode: shopcode,\n            chatname: chatname,\n            status: 'read'\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat/update_chat_log_web.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n            const json = await response.json()\n        } catch (error) {\n            //   alert(error)\n            console.error(error)\n        }\n        onPressTitle(shopname, shopcode, chatname, menu)\n\n    }\n\n    const onPressTitle = (shopname, shopcode, chatname, menu) => {\n        chatName = chatname;\n        shopCode = shopcode;\n        menuChat = menu;\n        let getTitle = shopcode + ' (' + shopname + ')'\n\n        setTitleText(getTitle);\n        setChatText(chatName);\n        setShopCodeText(shopCode);\n        setShopNameText(shopname);\n        setMenuText(menuChat);\n\n        readUser(shopcode, chatName)\n    };\n\n    const readUser = async (getshopcode, getchatName) => {\n   //   const cityRef = db.collection(getchatName).doc('pvTqBlnbd9ESJB6sx0w9');\n     //   const res = await cityRef.update({ received: true });\n\n       // const cityRef = db.collection(getchatName).where(\"received\", \"==\", false)\n        const cityRef = db.collection(getchatName).where(\"user._id\", \"==\", getshopcode)\n            .get()\n            .then(function (querySnapshot) {\n                querySnapshot.forEach(function (doc) {\n                    doc.ref.update({ received: true })\n                });\n            })\n\n        const unsubscribe = db.collection(getchatName).orderBy('createdAt', 'desc').onSnapshot(snapshot => setMessages(\n        snapshot.docs.map(doc => ({\n                _id: doc.data()._id,\n                createdAt: doc.data().createdAt.toDate(),\n                text: doc.data().text,\n                user: doc.data().user,\n                image: doc.data().image,\n                video: doc.data().video,\n                received: doc.data().received\n            }))\n        ))\n        return () => unsubscribe;\n    \n    }\n\n    const FlatListItemSeparator = () => {\n        return (\n            //Item Separator\n            <View style={styles.listItemSeparatorStyle} />\n        );\n    };\n    const [images, setImages] = useState([]);\n    const [videos, setVideos] = useState([]);\n\n    const [urls, setUrls] = useState([]);\n    const [progress, setProgress] = useState(0);\n\n    const handleChange = (e) => {\n        setImages([]);\n        setUrls([]);\n        for (let i = 0; i < e.target.files.length; i++) {\n            const newImage = e.target.files[i];\n            newImage[\"id\"] = Math.random();\n\n            setImages((prevState) => [...prevState, newImage]);\n        }\n    };\n\n    const handleUpload = async () => {\n        var date = new Date().getDate(); //Current Date\n        var month = new Date().getMonth() + 1; //Current Month\n        var year = new Date().getFullYear(); //Current Year\n        var hours = new Date().getHours(); //Current Hours\n        var min = new Date().getMinutes(); //Current Minutes\n        var sec = new Date().getSeconds(); //Current Seconds\n\n        const filename = 'admin_' + year + month + date + hours + min + sec\n\n        const promises = [];\n        images.map((image) => {\n            const uploadTask = storage.ref(`images/${filename}`).put(image);\n\n            promises.push(uploadTask);\n            uploadTask.on(\n                \"state_changed\",\n                (snapshot) => {\n                    const progress = Math.round(\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                    );\n                    setProgress(progress);\n                },\n                (error) => {\n                    console.log(error);\n                },\n                async () => {\n                    await storage\n                        .ref(\"images\")\n                        .child(filename)\n                        .getDownloadURL()\n                        .then((urls) => {\n                            uploadImagePicked(urls)\n                            setUrls((prevState) => [...prevState, urls]);\n                        });\n                }\n            );\n          //  uploadImagePicked()\n        });\n\n/*\n        Promise.all(promises)\n            .then(() => )\n            .catch((err) => console.log(err));\n          */  \n    };\n\n    const uploadImagePicked = (geturls) => {\n        const randomid = Math.random().toString(36).substring(7)\n        let msg = {\n            _id: randomid,\n            text: '',\n            createdAt: new Date(),\n            user: {\n                _id: 'Admin',\n                name: 'Admin',\n                avatar: 'https://static-s.aa-cdn.net/img/gp/20600014266053/JVWGO91AFGOSfDoqO3V_YlUiWnCoiyob0aPkVOss0qASb26aRbXvWiiNK12ZFLxfsSw=s300?v=1'\n            },\n            image: geturls\n        }\n\n        const {\n            _id,\n            createdAt,\n            text,\n            user,\n            image,\n            received\n        } = [msg][0]\n        db.collection(chatText).add({\n            _id,\n            createdAt,\n            text,\n            user,\n            image,\n            received: false\n        })\n        insertChatLog(chatText, menuText)\n\n    }\n\n\n    const handleChangevdo = (e) => {\n        setVideos([]);\n        setUrls([]);\n        for (let i = 0; i < e.target.files.length; i++) {\n            const newImage = e.target.files[i];\n            newImage[\"id\"] = Math.random();\n\n            setVideos((prevState) => [...prevState, newImage]);\n        }\n    };\n\n    const handleUploadvdo = async () => {\n        const promises = [];\n        var date = new Date().getDate(); //Current Date\n        var month = new Date().getMonth() + 1; //Current Month\n        var year = new Date().getFullYear(); //Current Year\n        var hours = new Date().getHours(); //Current Hours\n        var min = new Date().getMinutes(); //Current Minutes\n        var sec = new Date().getSeconds(); //Current Seconds\n\n        const filename = 'admin_' + year + month + date + hours + min + sec\n\n        videos.map((image) => {\n            const uploadTask = storage.ref(`videos/${filename}`).put(image);\n\n            promises.push(uploadTask);\n            uploadTask.on(\n                \"state_changed\",\n                (snapshot) => {\n                    const progress = Math.round(\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                    );\n                    setProgress(progress);\n                },\n                (error) => {\n                    console.log(error);\n                },\n                async () => {\n                    await storage\n                        .ref(\"videos\")\n                        .child(filename)\n                        .getDownloadURL()\n                        .then((urls) => {\n                            uploadVideosPicked(urls)\n                            setUrls((prevState) => [...prevState, urls]);\n                        });\n                }\n            );\n            //  uploadImagePicked()\n        });\n\n        /*\n                Promise.all(promises)\n                    .then(() => )\n                    .catch((err) => console.log(err));\n                  */\n    };\n\n    const renderMessageVideo = (props) => {\n        const { currentMessage } = props;\n        return (\n            <View style={{ position: 'relative', height: 150, width: 250 }}>\n                <Video\n                    resizeMode=\"cover\"\n                    height={150}\n                    width={250}\n                    useNativeControls\n                    shouldPlay={false}\n                    source={{ uri: currentMessage.video }}\n                />\n            </View>\n        );\n    };\n\n    const uploadVideosPicked = (geturls) => {\n        const randomid = Math.random().toString(36).substring(7)\n        let msg = {\n            _id: randomid,\n            text: '',\n            createdAt: new Date(),\n            user: {\n                _id: 'Admin',\n                name: 'Admin',\n                avatar: 'https://static-s.aa-cdn.net/img/gp/20600014266053/JVWGO91AFGOSfDoqO3V_YlUiWnCoiyob0aPkVOss0qASb26aRbXvWiiNK12ZFLxfsSw=s300?v=1'\n            },\n            video: geturls\n        }\n\n        const {\n            _id,\n            createdAt,\n            text,\n            user,\n            video,\n            received\n        } = [msg][0]\n        db.collection(chatText).add({\n            _id,\n            createdAt,\n            text,\n            user,\n            video,\n            received: false\n        })\n        insertChatLog(chatText, menuText)\n\n    }\n\n    const renderBubble = (props) => {\n        return (\n            <Bubble\n                {...props}\n                tickStyle={{\n                    color: props.currentMessage.received ? '#00FF00' : '#454545'\n                }}\n                timeTextStyle={{\n                    right: {\n                        color: 'rgb(255,255,255)'\n                    },\n                    left: {\n                        color: 'rgb(0,0,0)'\n                    },\n                }}\n                textStyle={{\n                    right: {\n                        color: 'rgb(255,255,255)'\n                    },\n                    left: {\n                        color: 'rgb(0,0,0)'\n                    },\n\n                }}\n                wrapperStyle={{\n                    right:\n                    {\n                        backgroundColor: 'rgba(0,102,204,1)',\n                        borderRadius: 15\n                    },\n                    left:\n                    {\n                        backgroundColor: 'rgb(255,255,255)',\n                        borderRadius: 15\n                    }\n                }}\n                quickReplyStyle={{\n                    color: 'rgba(0,102,204,1)',\n                    borderWidth: 2,\n                    borderRadius: 30,\n                    backgroundColor: 'rgb(255,255,255)'\n                }}\n\n            />\n        );\n    };\n\n    return (\n\n        <View style={[styles.container, {\n            flexDirection: \"row\"\n        }]}>\n            <View style={{ flex: 1, backgroundColor: \"write\" }, styles.container}>\n                <SearchBar\n                    lightTheme\n                    round\n                    searchIcon={{ size: 24 }}\n                    onChangeText={(text) => searchFilterFunction(text)}\n                    onClear={(text) => searchFilterFunction('')}\n                    placeholder=\"ค้นหาจากรหัสร้านค้า...\"\n                    value={search}\n                />\n\n                <SectionList\n                    ItemSeparatorComponent={FlatListItemSeparator}\n                    sections={[\n                        { data: filteredDataSource },\n                    ]}\n                    renderItem={({ item }) => (\n                        // Single Comes here which will be repeatative for the FlatListItems\n                        <View style={{ flex: 1, flexDirection: 'row', marginLeft: 20 }}>\n                            <Image\n                                source={{ uri: item.displayimage }}\n                                style={styles.Img}\n                            />\n                            <Text\n                                style={styles.sectionListItemStyle}\n                                //Item Separator View\n                                onPress={() => updateChatLog(item.shopname, item.shopcode, item.chatname, item.menu)}>\n\n                                {item.shopcode} ({item.shopname})\n                            </Text>\n                            <Text\n                                style={{\n                                    textAlign: 'center',\n                                    backgroundColor: item.chatcolor,\n                                    fontSize: 10,\n                                    padding: 5,\n                                    marginTop: 5,\n                                    color: '#fff',\n                                    height: 20,\n                                    width: 20,\n                                    borderRadius: 10\n                                }}>\n                                {item.chatcount}\n                            </Text>\n                        </View>\n                    )}\n                    keyExtractor={(item, index) => index}\n                />\n            </View>\n            <View style={{ flex: 2, backgroundColor: \"lightgray\" }} >\n                <View\n                    style={{\n                        flexDirection: \"row\",\n                        height: 40,\n                        padding: 0\n                    }}\n                >\n                    <View style={{ backgroundColor: \"#0089FC\", flex: 3 }}>\n                        <Text style={styles.titleText}>{titleText}</Text>\n                    </View>\n                    <View style={{ backgroundColor: \"#0089FC\", flex: 0.5 }}>\n                        <Button title=\"ปิดการสนทนา\" style={styles.button}\n                            color={\"blue\"}\n                            onPress={() => submit(chatText)}\n                        />\n                    </View>\n                </View>\n                <GiftedChat\n                    messages={messages}\n                    showAvatarForEveryMessage={true}\n                    renderBubble={renderBubble}\n                    renderMessageVideo={renderMessageVideo}\n                    onSend={messages => onSend(messages, chatText, menuChat)}\n                    user={{\n                        _id: 'Admin',\n                        name: 'Admin',\n                        avatar: 'https://static-s.aa-cdn.net/img/gp/20600014266053/JVWGO91AFGOSfDoqO3V_YlUiWnCoiyob0aPkVOss0qASb26aRbXvWiiNK12ZFLxfsSw=s300?v=1'\n                    }}\n                />\n                <View\n                    style={{\n                        flexDirection: \"row\",\n                        height: 25,\n                        padding: 0\n                    }}\n                >\n                    <View style={{ backgroundColor: \"lightgray\", flex: 2 }}>\n                        <div>\n                            <input type=\"file\" id=\"upload-file\" hidden onChange={handleChange} accept=\"image/*\" />\n                            <label for=\"upload-file\">เลือกรูปภาพ</label>\n                        </div>\n                    </View>\n                    <View style={{ backgroundColor: \"lightgray\", flex: 0.5 }}>\n                        <div>\n                            <button onClick={handleUpload}>ส่งรูป</button>\n                        </div>\n                       \n                    </View>\n                    <View style={{ backgroundColor: \"lightgray\", flex: 2 }}>\n                        <div> \n                            <input type=\"file\" id=\"upload-file-video\" hidden onChange={handleChangevdo} accept=\"video/*\" />\n                            <label for=\"upload-file-video\">เลือกวิดีโอ</label>\n                            </div>\n                       \n                    </View>\n                    <View style={{ backgroundColor: \"lightgray\", flex: 0.5 }}>\n                        <div>\n                            <button onClick={handleUploadvdo}>ส่งวิดีโอ</button>\n                        </div>\n                    </View>\n                </View>\n                                \n            </View>\n        </View >\n    )\n}\nexport default ChatScreen\n\nconst styles = StyleSheet.create({\n    Img: {\n        height: 50,\n        width: 50,\n        borderRadius: 25\n    },\n    namechats: {\n        /// flex: 1,\n        // justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#0089FC',\n        height: 40\n    },\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        backgroundColor: 'white',\n    },\n    titleText: {\n        textAlign: 'center',\n        backgroundColor: '#0089FC',\n        fontSize: 20,\n        padding: 5,\n        color: '#fff',\n        height: 40\n\n    },\n    notiText: {\n        textAlign: 'center',\n        backgroundColor: 'red',\n        fontSize: 10,\n        padding: 5,\n        marginTop: 5,\n        marginRight: 5,\n        color: '#fff',\n        height: 20,\n        width: 20,\n        borderRadius: 10\n    },\n    sectionListItemStyle: {\n        fontSize: 15,\n        padding: 15,\n        color: '#000',\n        backgroundColor: 'white',\n    },\n    listItemSeparatorStyle: {\n        height: 0.5,\n        width: '100%',\n        backgroundColor: '#C8C8C8',\n    },\n    button: {\n        justifyContent: 'center',\n        width: 250,\n        height: 40,\n        borderRadius: 10\n    },\n\n});\n","import React from 'react'\nimport { View, StyleSheet, Image, Button } from 'react-native'\n\nconst MenuScreen = ({ navigation }) => {\n\n    return (\n\n        <View style={style.container}>\n            <Image\n                source={require(\"../assets/Pepsi-Logo.png\")}\n                resizeMode=\"contain\"\n                style={style.logo1}\n            ></Image>\n\n            <View style={[style.containerrow, {\n\n                flexDirection: \"row\"\n            }]}>\n\n\n                <Button title=\"Live Chat\" style={style.button}\n                    color={\"#EE0000\"}\n                    onPress={() => navigation.navigate('Chat')}\n                />\n\n                &nbsp; &nbsp; &nbsp; &nbsp;\n\n\n                <Button title=\"History\" style={style.button}\n                    color={\"#EE0000\"} width='250' height='100'\n                    onPress={() => navigation.navigate('History')}\n                />\n            </View>\n        </View>\n    )\n}\nexport default MenuScreen\nconst style = StyleSheet.create({\n    button: {\n        width: 250,\n        height: 100,\n        marginTop: 20\n    },\n    container: {\n        flex: 1,\n        backgroundColor: \"rgba(0,102,204,1)\",\n        alignItems: \"center\",\n        padding: 10\n    },\n    containerrow: {\n        //  flex: 1,\n        backgroundColor: \"rgba(0,102,204,1)\",\n        alignItems: \"center\",\n        padding: 10\n    },\n    logo1: {\n        height: 150,\n        width: 220\n    },\n\n\n})","import React from 'react'\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\n\nexport const ExportToExcel = ({ apiData, fileName }) => {\n    const fileType =\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n    const fileExtension = \".xlsx\";\n\n    const exportToCSV = (apiData, fileName) => {\n        const ws = XLSX.utils.json_to_sheet(apiData);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension);\n    };\n\n    return (\n        <button onClick={(e) => exportToCSV(apiData, fileName)} style={{\n            backgroundColor: \"#145A32\", height: 40, borderRadius: 10, color: \"#ffffff\"\n        }}>Download Excel</button>\n    );\n};","import React, { useEffect, useState } from 'react'\nimport { SectionList, StyleSheet, Text, View, Image, Alert, Modal, Pressable} from 'react-native';\nimport { db } from '../firebase';\nimport { GiftedChat } from 'react-native-gifted-chat';\nimport { FlatList } from 'react-native';\nimport { SearchBar } from 'react-native-elements';\nimport { DataTable, IconButton } from 'react-native-paper';\nimport { Video, Audio } from 'expo-av';\n\nimport axios from 'axios'\nimport { ExportToExcel } from './ExportToExcel'\n\nconst HistoryScreen = ({ navigation }) => {\n    const [modalVisible, setModalVisible] = useState(false);\n    const [messages, setMessages] = useState([]);\n\n    const [titleText, setTitleText] = useState(\"\")\n    const [shopDisplayImage, setShopDisplayImage] = useState(\"\")\n    const [shopCodeText, setShopCodeText] = useState(\"\")\n    const [shopNameText, setShopNameText] = useState(\"\")\n    const [shopTellText, setShopTellText] = useState(\"\")\n    const [shopAddressText, setShopAddressText] = useState(\"\")\n    const [shopChatNameText, setShopChatNameText] = useState(\"\")\n    const [shopMenu, setShopMenu] = useState(\"\")\n\n    var chatName = ''\n\n    const [search, setSearch] = useState('');\n    const [filteredDataSource1, setFilteredDataSource1] = useState([]);\n    const [masterDataSource1, setMasterDataSource1] = useState([]);\n    const [filteredDataSource2, setFilteredDataSource2] = useState([]);\n    const [masterDataSource2, setMasterDataSource2] = useState([]);\n    const [filteredDataSource3, setFilteredDataSource3] = useState([]);\n    const [masterDataSource3, setMasterDataSource3] = useState([]);\n    const [filteredDataSource4, setFilteredDataSource4] = useState([]);\n    const [masterDataSource4, setMasterDataSource4] = useState([]);\n    const [filteredDataSource5, setFilteredDataSource5] = useState([]);\n    const [masterDataSource5, setMasterDataSource5] = useState([]);\n\n    const [filteredDataSource6, setFilteredDataSource6] = useState([]);\n    const [masterDataSource6, setMasterDataSource6] = useState([]);\n\n    const [data, setData] = React.useState([])\n    const fileName = \"Export_Chat_Report\"; // here enter filename for your excel file\n\n\n    React.useEffect(() => {\n\n        const fetchData = () => {\n            axios.get('https://school.treesbot.com/pepsichat/export_chat_all.php').then(r => setData(r.data))\n        }\n        fetchData()\n\n    }, [])\n\n\n    const getUser = async (menu) => {\n        var Data = {\n            menu: menu,\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat/select_user_menu.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n            const json = await response.json()\n            if (menu == 'group1') {\n                setFilteredDataSource1(json);\n                setMasterDataSource1(json);\n                onPressTitle(json[0].displayimage, json[0].shopname, json[0].shopcode, json[0].tell, json[0].address, json[0].chatname, json[0].menu)\n                getTable(json[0].shopcode)\n            } else if (menu == 'group2') {\n                setFilteredDataSource2(json);\n                setMasterDataSource2(json);\n            } else if (menu == 'group3') {\n                setFilteredDataSource3(json);\n                setMasterDataSource3(json);\n            } else if (menu == 'group4') {\n                setFilteredDataSource4(json);\n                setMasterDataSource4(json);\n            } else if (menu == 'group5') {\n                setFilteredDataSource5(json);\n                setMasterDataSource5(json);\n            } else if (menu == '') {\n                setFilteredDataSource6(json);\n                setMasterDataSource6(json);\n            }\n        } catch (error) {\n            console.error(error)\n        } \n    }\n\n    useEffect(() => {\n        getUser('group1')\n        getUser('group2')\n        getUser('group3')\n        getUser('group4')\n        getUser('group5')\n        getUser('')\n\n    }, [])\n\n    const searchFilterFunction = (text) => {\n        // Check if searched text is not blank\n        if (text) {\n            // Inserted text is not blank\n            // Filter the masterDataSource\n            // Update FilteredDataSource\n            const newData1 = masterDataSource1.filter(function (item) {\n                const itemData = item.shopcode\n                    ? item.shopcode.toUpperCase()\n                    : ''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData) > -1;\n            });\n            const newData2 = masterDataSource2.filter(function (item) {\n                const itemData = item.shopcode\n                    ? item.shopcode.toUpperCase()\n                    : ''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData) > -1;\n            });\n            const newData3 = masterDataSource3.filter(function (item) {\n                const itemData = item.shopcode\n                    ? item.shopcode.toUpperCase()\n                    : ''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData) > -1;\n            });\n            const newData4 = masterDataSource4.filter(function (item) {\n                const itemData = item.shopcode\n                    ? item.shopcode.toUpperCase()\n                    : ''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData) > -1;\n            });\n            const newData5 = masterDataSource5.filter(function (item) {\n                const itemData = item.shopcode\n                    ? item.shopcode.toUpperCase()\n                    : ''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData) > -1;\n            });\n            const newData6 = masterDataSource6.filter(function (item) {\n                const itemData = item.shopcode\n                    ? item.shopcode.toUpperCase()\n                    : ''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData) > -1;\n            });\n            setFilteredDataSource1(newData1);\n            setFilteredDataSource2(newData2);\n            setFilteredDataSource3(newData3);\n            setFilteredDataSource4(newData4);\n            setFilteredDataSource5(newData5);\n            setFilteredDataSource6(newData6)\n\n            setSearch(text);\n        } else {\n            // Inserted text is blank\n            // Update FilteredDataSource with masterDataSource\n            setFilteredDataSource1(masterDataSource1);\n            setFilteredDataSource2(masterDataSource2);\n            setFilteredDataSource3(masterDataSource3);\n            setFilteredDataSource4(masterDataSource4);\n            setFilteredDataSource5(masterDataSource5);\n            setFilteredDataSource6(masterDataSource6)\n\n            setSearch(text);\n        }\n    };\n\n    const onPressChat = (chatname) => {\n        chatName = chatname\n        setModalVisible(true)\n        readUser()\n    };\n\n    async function readUser() {\n        const unsubscribe = db.collection(chatName).orderBy('createdAt', 'desc').onSnapshot(snapshot => setMessages(\n            snapshot.docs.map(doc => ({\n                _id: doc.data()._id,\n                createdAt: doc.data().createdAt.toDate(),\n                text: doc.data().text,\n                user: doc.data().user,\n                image: doc.data().image,\n                video: doc.data().video\n                \n            }))\n        ))\n        return () => unsubscribe;\n    }\n\n    const FlatListItemSeparator = () => {\n        return (\n            //Item Separator\n            <View style={styles.listItemSeparatorStyle} />\n        );\n    };\n\n    const onPressTitle = (displayimage, username, shopcode, tell, address, chatname, menu) => {\n        chatName = chatname\n        let getTitle = shopcode + ' (' + username + ')'\n\n        setTitleText(getTitle);\n        setShopDisplayImage(displayimage)\n        setShopNameText(username);\n        setShopCodeText(shopcode);\n        setShopTellText(tell);\n        setShopAddressText(address);\n        setShopChatNameText(chatname);\n        setShopMenu(menu);\n\n        getTable(shopcode);\n    };\n\n    const [dataTable, setDataTable] = useState([]);\n\n    const getTable = async (shopcode) => {\n        var Data = {\n            shopcode: shopcode,\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat/select_user_shopcode.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n            const json = await response.json()\n            setDataTable(json);\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    const test2 = (menu) => {\n        var groupname = ''\n        if (menu == 'group1') {\n            groupname = 'แจ้งปัญหาจากกิจกรรมถ่ายรูปตู้แช่'\n        } else if (menu == 'group2') {\n            groupname = 'สอบถาม, ติดตาม หรือแจ้งปัญหาการแลกของรางวัล'\n        } else if (menu == 'group3') {\n            groupname = 'สอบถามหรือแจ้งปัญหาการใช้งานแอพพลิเคชั่นด้านอื่นๆ'\n        } else if (menu == 'group4') {\n            groupname = 'สอบถามรายละเอียดทั่วไป'\n        } else if (menu == 'group5') {\n            groupname = 'แอด LINE เป๊ปซี่แฟนคลับ'\n        } else if (menu == '') {\n            groupname = 'ไม่ได้เลือกหัวข้อสนทนา'\n        }\n        return groupname\n    }\n    const _renderItem = ({ item }) => (\n        <DataTable.Row>\n            <DataTable.Cell style={{ flex: 1 }}>{item.num}</DataTable.Cell>\n            <DataTable.Cell style={{ flex: 2 }}>{item.dateinsert}</DataTable.Cell>\n            <DataTable.Cell style={{ flex: 3 }}>{test2(item.menu)}</DataTable.Cell>\n            <DataTable.Cell style={{ flex: 1 }}><IconButton\n                icon=\"eye\"\n                color={'blue'}\n                size={20}\n                onPress={() => onPressChat(item.chatname)}\n            />\n            </DataTable.Cell>\n\n        </DataTable.Row>\n    );\n\n    const renderMessageVideo = (props) => {\n        const { currentMessage } = props;\n        return (\n            <View style={{ position: 'relative', height: 150, width: 250 }}>\n                <Video\n                    resizeMode=\"cover\"\n                    height={150}\n                    width={250}\n                    useNativeControls\n                    shouldPlay={false}\n                    source={{ uri: currentMessage.video }}\n                    style={styles.video}\n                />\n            </View>\n        );\n    };\n\n    return (\n\n        <View style={[styles.container, {\n            // Try setting `flexDirection` to `\"row\"`.\n            flexDirection: \"row\"\n        }]}>\n            <View style={{ flex: 1, backgroundColor: \"white\" }, styles.container}>\n                <ExportToExcel apiData={data} fileName={fileName} />\n                <SearchBar\n                    lightTheme\n                    round\n                    searchIcon={{ size: 24 }}\n                    onChangeText={(text) => searchFilterFunction(text)}\n                    onClear={(text) => searchFilterFunction('')}\n                    placeholder=\"ค้นหาจากรหัสร้านค้า...\"\n                    value={search}\n                />\n\n                <SectionList\n                    ItemSeparatorComponent={FlatListItemSeparator}\n                    sections={[\n                        { title: 'แจ้งปัญหาจากกิจกรรมถ่ายรูปตู้แช่', data: filteredDataSource1 },\n                        { title: 'สอบถาม, ติดตาม หรือแจ้งปัญหาการแลกของรางวัล', data: filteredDataSource2 },\n                        { title: 'สอบถามหรือแจ้งปัญหาการใช้งานแอพพลิเคชั่นด้านอื่นๆ', data: filteredDataSource3 },\n                        { title: 'สอบถามรายละเอียดทั่วไป', data: filteredDataSource4 },\n                        { title: 'แอด LINE เป๊ปซี่แฟนคลับ', data: filteredDataSource5 },\n                        { title: 'ไม่ได้เลือกหัวข้อสนทนา', data: filteredDataSource6 },\n\n                    ]}\n                    renderSectionHeader={({ section }) => (\n                        <Text style={styles.groupText}> {section.title} </Text>\n                    )}\n                    renderItem={({ item }) => (\n                        // Single Comes here which will be repeatative for the FlatListItems\n                        <View style={{ flex: 1, flexDirection: 'row', marginLeft: 20}}>\n                            <Image\n                                source={{ uri: item.displayimage }}\n                                style={styles.Img}\n                            />\n                            <Text\n                                style={styles.sectionListItemStyle}\n                                //Item Separator View\n                                onPress={() => onPressTitle(item.displayimage, item.shopname, item.shopcode, item.tell, item.address, item.chatname, item.menu)}>\n\n                                {item.shopcode} ({item.shopname})\n                            </Text>\n\n                        </View>\n                    )}\n                    keyExtractor={(item, index) => index}\n                />\n            </View>\n            <View style={{ flex: 2, backgroundColor: \"#0089FC\" }} >\n                <Modal\n                    animationType=\"slide\"\n                    transparent={true}\n                    visible={modalVisible}\n                    onRequestClose={() => {\n                        Alert.alert(\"Modal has been closed.\");\n                        setModalVisible(!modalVisible);\n                    }}\n                >\n                    <View style={styles.centeredView}>\n                        <View style={styles.modalView}>\n                            <GiftedChat\n                                messages={messages}\n                                showAvatarForEveryMessage={true}\n                                renderMessageVideo={renderMessageVideo}\n                                user={{\n                                    _id: 'Admin',\n                                    name: 'Admin',\n                                    avatar: 'https://static-s.aa-cdn.net/img/gp/20600014266053/JVWGO91AFGOSfDoqO3V_YlUiWnCoiyob0aPkVOss0qASb26aRbXvWiiNK12ZFLxfsSw=s300?v=1'\n                                }}\n                                renderInputToolbar={() => { return null }}\n                            />\n                            <Pressable\n                                style={[styles.button, styles.buttonClose]}\n                                onPress={() => setModalVisible(!modalVisible)}\n                            >\n                                <Text style={styles.textStyle}>ปิด</Text>\n                            </Pressable>\n                        </View>\n                    </View>\n                </Modal>\n                <View\n                    style={{\n                        backgroundColor: \"white\",\n                        flexDirection: \"row\",\n                        height: 150,\n                        padding: 0,\n                        borderRadius: 20,\n                        marginTop: 20,\n                        marginLeft: 20,\n                        marginRight: 20\n                    }}\n                >\n                    <View style={{ flex: 1}}>\n                        <Image\n                            source={{ uri: shopDisplayImage }}\n                            style={styles.Img2}\n                        />\n                    </View>\n                    <View style={{ flex: 2 }}>\n                        <Text style={styles.titleText}><b>{titleText}</b></Text>\n                        <Text style={styles.titleText}>รหัสร้านค้า : {shopCodeText}</Text>\n                        <Text style={styles.titleText}>เบอร์โทรติดต่อ : {shopTellText}</Text>\n                        <Text style={styles.titleText}>ที่อยู่ : {shopAddressText}</Text>\n                    </View>\n                </View>\n                <View style={{\n                    backgroundColor: \"white\",\n                    flexDirection: \"row\",\n                    borderRadius: 20,\n                    marginTop: 10,\n                    marginLeft: 20,\n                    marginRight: 20,\n                    marginBottom: 10\n                }}>\n                    <DataTable>\n                        <DataTable.Header>\n                            <DataTable.Title style={{ flex: 1 }}>No</DataTable.Title>\n                            <DataTable.Title style={{ flex: 2 }}>Date</DataTable.Title>\n                            <DataTable.Title style={{ flex: 3 }}>Message</DataTable.Title>\n                            <DataTable.Title style={{ flex: 1 }}>Action</DataTable.Title>\n\n                        </DataTable.Header>\n\n                        <FlatList data={dataTable} renderItem={_renderItem} />\n                    </DataTable>\n                </View>\n            </View>\n        </View >\n      \n    )\n}\nexport default HistoryScreen\n\nconst styles = StyleSheet.create({\n    Img: {\n        height: 50,\n        width: 50,\n        borderRadius: 25\n    },\n    Img2: {\n        marginTop: 25,\n        marginLeft: 50,\n        height: 100,\n        width: 100,\n        borderRadius: 75\n    },\n    namechats: {\n        /// flex: 1,\n        // justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#0089FC',\n        height: 40\n    },\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        backgroundColor: 'white',\n    },\n    container2: {\n        /// flex: 1,\n        // justifyContent: 'center',\n        backgroundColor: 'white',\n        height: 400,\n        width: 600\n    },\n    groupText: {\n        backgroundColor: 'gray',\n        fontSize: 18,\n        padding: 5,\n        color: 'white',\n    },\n    titleText: {\n        fontSize: 16,\n        padding: 5,\n        color: 'black',\n    },\n    sectionListItemStyle: {\n        fontSize: 15,\n        padding: 15,\n        color: '#000',\n        backgroundColor: 'white',\n    },\n    listItemSeparatorStyle: {\n        height: 0.5,\n        width: '100%',\n        backgroundColor: '#C8C8C8',\n    },\n    centeredView: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginTop: 22\n    },\n    modalView: {\n        flex: 1,\n        margin: 20,\n        backgroundColor: \"white\",\n        borderRadius: 20,\n        width: 500,\n        height: 500,\n        padding: 35,\n        alignItems: \"center\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 4,\n        elevation: 5\n    },\n    button: {\n        borderRadius: 20,\n        padding: 10,\n        elevation: 2\n    },\n    buttonOpen: {\n        backgroundColor: \"#F194FF\",\n    },\n    buttonClose: {\n        backgroundColor: \"#2196F3\",\n    },\n    textStyle: {\n        color: \"white\",\n        fontWeight: \"bold\",\n        textAlign: \"center\"\n    },\n    modalText: {\n        marginBottom: 15,\n        textAlign: \"center\"\n    }\n});\n\n","import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport ChatScreen from './screens/ChatScreen';\nimport MenuScreen from './screens/MenuScreen';\nimport HistoryScreen from './screens/HistoryScreen';\n\nconst Stack = createStackNavigator();\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator screenOptions={{ headerTitleAlign: 'center' }}>\n        <Stack.Screen name='Menu' component={MenuScreen} />\n        <Stack.Screen name='Chat' component={ChatScreen} />\n        <Stack.Screen name='History' component={HistoryScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/media/Pepsi-Logo.32560c85.png\";"],"sourceRoot":""}